// Code generated; DO NOT EDIT.

use num_derive::FromPrimitive;

#[derive(Clone, Debug, PartialEq, Eq, FromPrimitive)]
pub enum Mozjs {
    End = 0,
    Identifier = 1,
    HashBangLine = 2,
    Export = 3,
    STAR = 4,
    Default = 5,
    As = 6,
    LBRACE = 7,
    COMMA = 8,
    RBRACE = 9,
    Import2 = 10,
    From = 11,
    With = 12,
    Var = 13,
    Let = 14,
    Const = 15,
    Else = 16,
    If = 17,
    Switch = 18,
    For = 19,
    LPAREN = 20,
    SEMI = 21,
    RPAREN = 22,
    Await = 23,
    In = 24,
    Of = 25,
    While = 26,
    Do = 27,
    Try = 28,
    Break = 29,
    Continue = 30,
    Debugger = 31,
    Return = 32,
    Throw = 33,
    COLON = 34,
    Case = 35,
    Catch = 36,
    Finally = 37,
    Yield = 38,
    EQ = 39,
    LBRACK = 40,
    RBRACK = 41,
    GlimmerTemplateContent = 42,
    GlimmerOpeningTag = 43,
    GlimmerClosingTag = 44,
    HtmlCharacterReference = 45,
    LT = 46,
    GT = 47,
    Identifier2 = 48,
    DOT = 49,
    LTSLASH = 50,
    SLASHGT = 51,
    DQUOTE = 52,
    SQUOTE = 53,
    StringFragment = 54,
    StringFragment2 = 55,
    Class2 = 56,
    Extends = 57,
    Async = 58,
    Function = 59,
    EQGT = 60,
    OptionalChain = 61,
    New = 62,
    PLUSEQ = 63,
    DASHEQ = 64,
    STAREQ = 65,
    SLASHEQ = 66,
    PERCENTEQ = 67,
    CARETEQ = 68,
    AMPEQ = 69,
    PIPEEQ = 70,
    GTGTEQ = 71,
    GTGTGTEQ = 72,
    LTLTEQ = 73,
    STARSTAREQ = 74,
    AMPAMPEQ = 75,
    PIPEPIPEEQ = 76,
    QMARKQMARKEQ = 77,
    DOTDOTDOT = 78,
    AMPAMP = 79,
    PIPEPIPE = 80,
    GTGT = 81,
    GTGTGT = 82,
    LTLT = 83,
    AMP = 84,
    CARET = 85,
    PIPE = 86,
    PLUS = 87,
    DASH = 88,
    SLASH = 89,
    PERCENT = 90,
    STARSTAR = 91,
    LTEQ = 92,
    EQEQ = 93,
    EQEQEQ = 94,
    BANGEQ = 95,
    BANGEQEQ = 96,
    GTEQ = 97,
    QMARKQMARK = 98,
    Instanceof = 99,
    BANG = 100,
    TILDE = 101,
    Typeof = 102,
    Void = 103,
    Delete = 104,
    PLUSPLUS = 105,
    DASHDASH = 106,
    StringFragment3 = 107,
    StringFragment4 = 108,
    EscapeSequence = 109,
    Comment = 110,
    BQUOTE = 111,
    DOLLARLBRACE = 112,
    SLASH2 = 113,
    RegexPattern = 114,
    RegexFlags = 115,
    Number = 116,
    PrivatePropertyIdentifier = 117,
    Target = 118,
    Meta = 119,
    This = 120,
    Super = 121,
    True = 122,
    False = 123,
    Null = 124,
    Undefined = 125,
    AT = 126,
    Static = 127,
    Staticget = 128,
    Get = 129,
    Set = 130,
    Preproc = 131,
    AutomaticSemicolon = 132,
    StringFragment5 = 133,
    QMARK = 134,
    HtmlComment = 135,
    JsxText = 136,
    Program = 137,
    ExportStatement = 138,
    NamespaceExport = 139,
    ExportClause = 140,
    ExportSpecifier = 141,
    ModuleExportName = 142,
    Declaration = 143,
    Import = 144,
    ImportStatement = 145,
    ImportClause = 146,
    FromClause = 147,
    NamespaceImport = 148,
    NamedImports = 149,
    ImportSpecifier = 150,
    ImportAttribute = 151,
    Statement = 152,
    ExpressionStatement = 153,
    VariableDeclaration = 154,
    LexicalDeclaration = 155,
    VariableDeclarator = 156,
    StatementBlock = 157,
    ElseClause = 158,
    IfStatement = 159,
    SwitchStatement = 160,
    ForStatement = 161,
    ForInStatement = 162,
    ForHeader = 163,
    WhileStatement = 164,
    DoStatement = 165,
    TryStatement = 166,
    WithStatement = 167,
    BreakStatement = 168,
    ContinueStatement = 169,
    DebuggerStatement = 170,
    ReturnStatement = 171,
    ThrowStatement = 172,
    EmptyStatement = 173,
    LabeledStatement = 174,
    SwitchBody = 175,
    SwitchCase = 176,
    SwitchDefault = 177,
    CatchClause = 178,
    FinallyClause = 179,
    ParenthesizedExpression = 180,
    Expression = 181,
    PrimaryExpression = 182,
    YieldExpression = 183,
    Object = 184,
    ObjectPattern = 185,
    AssignmentPattern = 186,
    ObjectAssignmentPattern = 187,
    Array = 188,
    ArrayPattern = 189,
    GlimmerTemplate = 190,
    JsxElement = 191,
    JsxExpression = 192,
    JsxOpeningElement = 193,
    MemberExpression = 194,
    JsxNamespaceName = 195,
    JsxClosingElement = 196,
    JsxSelfClosingElement = 197,
    JsxAttribute = 198,
    String = 199,
    Class = 200,
    ClassDeclaration = 201,
    ClassHeritage = 202,
    FunctionExpression = 203,
    FunctionDeclaration = 204,
    GeneratorFunction = 205,
    GeneratorFunctionDeclaration = 206,
    ArrowFunction = 207,
    CallExpression = 208,
    NewExpression = 209,
    AwaitExpression = 210,
    MemberExpression2 = 211,
    SubscriptExpression = 212,
    AssignmentExpression = 213,
    AugmentedAssignmentLhs = 214,
    AugmentedAssignmentExpression = 215,
    Initializer = 216,
    DestructuringPattern = 217,
    SpreadElement = 218,
    TernaryExpression = 219,
    BinaryExpression = 220,
    UnaryExpression = 221,
    UpdateExpression = 222,
    SequenceExpression = 223,
    String2 = 224,
    TemplateString = 225,
    TemplateSubstitution = 226,
    Regex = 227,
    MetaProperty = 228,
    Arguments = 229,
    Decorator = 230,
    MemberExpression3 = 231,
    CallExpression2 = 232,
    ClassBody = 233,
    FieldDefinition = 234,
    FormalParameters = 235,
    ClassStaticBlock = 236,
    Pattern = 237,
    RestPattern = 238,
    MethodDefinition = 239,
    Pair = 240,
    PairPattern = 241,
    PropertyName = 242,
    ComputedPropertyName = 243,
    ProgramRepeat1 = 244,
    ExportStatementRepeat1 = 245,
    ExportClauseRepeat1 = 246,
    NamedImportsRepeat1 = 247,
    VariableDeclarationRepeat1 = 248,
    SwitchBodyRepeat1 = 249,
    ObjectRepeat1 = 250,
    ObjectPatternRepeat1 = 251,
    ArrayRepeat1 = 252,
    ArrayPatternRepeat1 = 253,
    GlimmerTemplateRepeat1 = 254,
    JsxElementRepeat1 = 255,
    JsxOpeningElementRepeat1 = 256,
    JsxStringRepeat1 = 257,
    JsxStringRepeat2 = 258,
    SequenceExpressionRepeat1 = 259,
    StringRepeat1 = 260,
    StringRepeat2 = 261,
    TemplateStringRepeat1 = 262,
    ClassBodyRepeat1 = 263,
    FormalParametersRepeat1 = 264,
    PropertyIdentifier = 265,
    ShorthandPropertyIdentifier = 266,
    ShorthandPropertyIdentifierPattern = 267,
    StatementIdentifier = 268,
    Error = 269,
}

impl From<Mozjs> for &'static str {
    #[inline(always)]
    fn from(tok: Mozjs) -> Self {
        match tok {
            Mozjs::End => "end",
            Mozjs::Identifier => "identifier",
            Mozjs::HashBangLine => "hash_bang_line",
            Mozjs::Export => "export",
            Mozjs::STAR => "*",
            Mozjs::Default => "default",
            Mozjs::As => "as",
            Mozjs::LBRACE => "{",
            Mozjs::COMMA => ",",
            Mozjs::RBRACE => "}",
            Mozjs::Import2 => "import",
            Mozjs::From => "from",
            Mozjs::With => "with",
            Mozjs::Var => "var",
            Mozjs::Let => "let",
            Mozjs::Const => "const",
            Mozjs::Else => "else",
            Mozjs::If => "if",
            Mozjs::Switch => "switch",
            Mozjs::For => "for",
            Mozjs::LPAREN => "(",
            Mozjs::SEMI => ";",
            Mozjs::RPAREN => ")",
            Mozjs::Await => "await",
            Mozjs::In => "in",
            Mozjs::Of => "of",
            Mozjs::While => "while",
            Mozjs::Do => "do",
            Mozjs::Try => "try",
            Mozjs::Break => "break",
            Mozjs::Continue => "continue",
            Mozjs::Debugger => "debugger",
            Mozjs::Return => "return",
            Mozjs::Throw => "throw",
            Mozjs::COLON => ":",
            Mozjs::Case => "case",
            Mozjs::Catch => "catch",
            Mozjs::Finally => "finally",
            Mozjs::Yield => "yield",
            Mozjs::EQ => "=",
            Mozjs::LBRACK => "[",
            Mozjs::RBRACK => "]",
            Mozjs::GlimmerTemplateContent => "_glimmer_template_content",
            Mozjs::GlimmerOpeningTag => "glimmer_opening_tag",
            Mozjs::GlimmerClosingTag => "glimmer_closing_tag",
            Mozjs::HtmlCharacterReference => "html_character_reference",
            Mozjs::LT => "<",
            Mozjs::GT => ">",
            Mozjs::Identifier2 => "identifier",
            Mozjs::DOT => ".",
            Mozjs::LTSLASH => "</",
            Mozjs::SLASHGT => "/>",
            Mozjs::DQUOTE => "\"",
            Mozjs::SQUOTE => "'",
            Mozjs::StringFragment => "string_fragment",
            Mozjs::StringFragment2 => "string_fragment",
            Mozjs::Class2 => "class",
            Mozjs::Extends => "extends",
            Mozjs::Async => "async",
            Mozjs::Function => "function",
            Mozjs::EQGT => "=>",
            Mozjs::OptionalChain => "optional_chain",
            Mozjs::New => "new",
            Mozjs::PLUSEQ => "+=",
            Mozjs::DASHEQ => "-=",
            Mozjs::STAREQ => "*=",
            Mozjs::SLASHEQ => "/=",
            Mozjs::PERCENTEQ => "%=",
            Mozjs::CARETEQ => "^=",
            Mozjs::AMPEQ => "&=",
            Mozjs::PIPEEQ => "|=",
            Mozjs::GTGTEQ => ">>=",
            Mozjs::GTGTGTEQ => ">>>=",
            Mozjs::LTLTEQ => "<<=",
            Mozjs::STARSTAREQ => "**=",
            Mozjs::AMPAMPEQ => "&&=",
            Mozjs::PIPEPIPEEQ => "||=",
            Mozjs::QMARKQMARKEQ => "??=",
            Mozjs::DOTDOTDOT => "...",
            Mozjs::AMPAMP => "&&",
            Mozjs::PIPEPIPE => "||",
            Mozjs::GTGT => ">>",
            Mozjs::GTGTGT => ">>>",
            Mozjs::LTLT => "<<",
            Mozjs::AMP => "&",
            Mozjs::CARET => "^",
            Mozjs::PIPE => "|",
            Mozjs::PLUS => "+",
            Mozjs::DASH => "-",
            Mozjs::SLASH => "/",
            Mozjs::PERCENT => "%",
            Mozjs::STARSTAR => "**",
            Mozjs::LTEQ => "<=",
            Mozjs::EQEQ => "==",
            Mozjs::EQEQEQ => "===",
            Mozjs::BANGEQ => "!=",
            Mozjs::BANGEQEQ => "!==",
            Mozjs::GTEQ => ">=",
            Mozjs::QMARKQMARK => "??",
            Mozjs::Instanceof => "instanceof",
            Mozjs::BANG => "!",
            Mozjs::TILDE => "~",
            Mozjs::Typeof => "typeof",
            Mozjs::Void => "void",
            Mozjs::Delete => "delete",
            Mozjs::PLUSPLUS => "++",
            Mozjs::DASHDASH => "--",
            Mozjs::StringFragment3 => "string_fragment",
            Mozjs::StringFragment4 => "string_fragment",
            Mozjs::EscapeSequence => "escape_sequence",
            Mozjs::Comment => "comment",
            Mozjs::BQUOTE => "`",
            Mozjs::DOLLARLBRACE => "${",
            Mozjs::SLASH2 => "/",
            Mozjs::RegexPattern => "regex_pattern",
            Mozjs::RegexFlags => "regex_flags",
            Mozjs::Number => "number",
            Mozjs::PrivatePropertyIdentifier => "private_property_identifier",
            Mozjs::Target => "target",
            Mozjs::Meta => "meta",
            Mozjs::This => "this",
            Mozjs::Super => "super",
            Mozjs::True => "true",
            Mozjs::False => "false",
            Mozjs::Null => "null",
            Mozjs::Undefined => "undefined",
            Mozjs::AT => "@",
            Mozjs::Static => "static",
            Mozjs::Staticget => "static get",
            Mozjs::Get => "get",
            Mozjs::Set => "set",
            Mozjs::Preproc => "preproc",
            Mozjs::AutomaticSemicolon => "_automatic_semicolon",
            Mozjs::StringFragment5 => "string_fragment",
            Mozjs::QMARK => "?",
            Mozjs::HtmlComment => "html_comment",
            Mozjs::JsxText => "jsx_text",
            Mozjs::Program => "program",
            Mozjs::ExportStatement => "export_statement",
            Mozjs::NamespaceExport => "namespace_export",
            Mozjs::ExportClause => "export_clause",
            Mozjs::ExportSpecifier => "export_specifier",
            Mozjs::ModuleExportName => "_module_export_name",
            Mozjs::Declaration => "declaration",
            Mozjs::Import => "import",
            Mozjs::ImportStatement => "import_statement",
            Mozjs::ImportClause => "import_clause",
            Mozjs::FromClause => "_from_clause",
            Mozjs::NamespaceImport => "namespace_import",
            Mozjs::NamedImports => "named_imports",
            Mozjs::ImportSpecifier => "import_specifier",
            Mozjs::ImportAttribute => "import_attribute",
            Mozjs::Statement => "statement",
            Mozjs::ExpressionStatement => "expression_statement",
            Mozjs::VariableDeclaration => "variable_declaration",
            Mozjs::LexicalDeclaration => "lexical_declaration",
            Mozjs::VariableDeclarator => "variable_declarator",
            Mozjs::StatementBlock => "statement_block",
            Mozjs::ElseClause => "else_clause",
            Mozjs::IfStatement => "if_statement",
            Mozjs::SwitchStatement => "switch_statement",
            Mozjs::ForStatement => "for_statement",
            Mozjs::ForInStatement => "for_in_statement",
            Mozjs::ForHeader => "_for_header",
            Mozjs::WhileStatement => "while_statement",
            Mozjs::DoStatement => "do_statement",
            Mozjs::TryStatement => "try_statement",
            Mozjs::WithStatement => "with_statement",
            Mozjs::BreakStatement => "break_statement",
            Mozjs::ContinueStatement => "continue_statement",
            Mozjs::DebuggerStatement => "debugger_statement",
            Mozjs::ReturnStatement => "return_statement",
            Mozjs::ThrowStatement => "throw_statement",
            Mozjs::EmptyStatement => "empty_statement",
            Mozjs::LabeledStatement => "labeled_statement",
            Mozjs::SwitchBody => "switch_body",
            Mozjs::SwitchCase => "switch_case",
            Mozjs::SwitchDefault => "switch_default",
            Mozjs::CatchClause => "catch_clause",
            Mozjs::FinallyClause => "finally_clause",
            Mozjs::ParenthesizedExpression => "parenthesized_expression",
            Mozjs::Expression => "expression",
            Mozjs::PrimaryExpression => "primary_expression",
            Mozjs::YieldExpression => "yield_expression",
            Mozjs::Object => "object",
            Mozjs::ObjectPattern => "object_pattern",
            Mozjs::AssignmentPattern => "assignment_pattern",
            Mozjs::ObjectAssignmentPattern => "object_assignment_pattern",
            Mozjs::Array => "array",
            Mozjs::ArrayPattern => "array_pattern",
            Mozjs::GlimmerTemplate => "glimmer_template",
            Mozjs::JsxElement => "jsx_element",
            Mozjs::JsxExpression => "jsx_expression",
            Mozjs::JsxOpeningElement => "jsx_opening_element",
            Mozjs::MemberExpression => "member_expression",
            Mozjs::JsxNamespaceName => "jsx_namespace_name",
            Mozjs::JsxClosingElement => "jsx_closing_element",
            Mozjs::JsxSelfClosingElement => "jsx_self_closing_element",
            Mozjs::JsxAttribute => "jsx_attribute",
            Mozjs::String => "string",
            Mozjs::Class => "class",
            Mozjs::ClassDeclaration => "class_declaration",
            Mozjs::ClassHeritage => "class_heritage",
            Mozjs::FunctionExpression => "function_expression",
            Mozjs::FunctionDeclaration => "function_declaration",
            Mozjs::GeneratorFunction => "generator_function",
            Mozjs::GeneratorFunctionDeclaration => "generator_function_declaration",
            Mozjs::ArrowFunction => "arrow_function",
            Mozjs::CallExpression => "call_expression",
            Mozjs::NewExpression => "new_expression",
            Mozjs::AwaitExpression => "await_expression",
            Mozjs::MemberExpression2 => "member_expression",
            Mozjs::SubscriptExpression => "subscript_expression",
            Mozjs::AssignmentExpression => "assignment_expression",
            Mozjs::AugmentedAssignmentLhs => "_augmented_assignment_lhs",
            Mozjs::AugmentedAssignmentExpression => "augmented_assignment_expression",
            Mozjs::Initializer => "_initializer",
            Mozjs::DestructuringPattern => "_destructuring_pattern",
            Mozjs::SpreadElement => "spread_element",
            Mozjs::TernaryExpression => "ternary_expression",
            Mozjs::BinaryExpression => "binary_expression",
            Mozjs::UnaryExpression => "unary_expression",
            Mozjs::UpdateExpression => "update_expression",
            Mozjs::SequenceExpression => "sequence_expression",
            Mozjs::String2 => "string",
            Mozjs::TemplateString => "template_string",
            Mozjs::TemplateSubstitution => "template_substitution",
            Mozjs::Regex => "regex",
            Mozjs::MetaProperty => "meta_property",
            Mozjs::Arguments => "arguments",
            Mozjs::Decorator => "decorator",
            Mozjs::MemberExpression3 => "member_expression",
            Mozjs::CallExpression2 => "call_expression",
            Mozjs::ClassBody => "class_body",
            Mozjs::FieldDefinition => "field_definition",
            Mozjs::FormalParameters => "formal_parameters",
            Mozjs::ClassStaticBlock => "class_static_block",
            Mozjs::Pattern => "pattern",
            Mozjs::RestPattern => "rest_pattern",
            Mozjs::MethodDefinition => "method_definition",
            Mozjs::Pair => "pair",
            Mozjs::PairPattern => "pair_pattern",
            Mozjs::PropertyName => "_property_name",
            Mozjs::ComputedPropertyName => "computed_property_name",
            Mozjs::ProgramRepeat1 => "program_repeat1",
            Mozjs::ExportStatementRepeat1 => "export_statement_repeat1",
            Mozjs::ExportClauseRepeat1 => "export_clause_repeat1",
            Mozjs::NamedImportsRepeat1 => "named_imports_repeat1",
            Mozjs::VariableDeclarationRepeat1 => "variable_declaration_repeat1",
            Mozjs::SwitchBodyRepeat1 => "switch_body_repeat1",
            Mozjs::ObjectRepeat1 => "object_repeat1",
            Mozjs::ObjectPatternRepeat1 => "object_pattern_repeat1",
            Mozjs::ArrayRepeat1 => "array_repeat1",
            Mozjs::ArrayPatternRepeat1 => "array_pattern_repeat1",
            Mozjs::GlimmerTemplateRepeat1 => "glimmer_template_repeat1",
            Mozjs::JsxElementRepeat1 => "jsx_element_repeat1",
            Mozjs::JsxOpeningElementRepeat1 => "jsx_opening_element_repeat1",
            Mozjs::JsxStringRepeat1 => "_jsx_string_repeat1",
            Mozjs::JsxStringRepeat2 => "_jsx_string_repeat2",
            Mozjs::SequenceExpressionRepeat1 => "sequence_expression_repeat1",
            Mozjs::StringRepeat1 => "string_repeat1",
            Mozjs::StringRepeat2 => "string_repeat2",
            Mozjs::TemplateStringRepeat1 => "template_string_repeat1",
            Mozjs::ClassBodyRepeat1 => "class_body_repeat1",
            Mozjs::FormalParametersRepeat1 => "formal_parameters_repeat1",
            Mozjs::PropertyIdentifier => "property_identifier",
            Mozjs::ShorthandPropertyIdentifier => "shorthand_property_identifier",
            Mozjs::ShorthandPropertyIdentifierPattern => "shorthand_property_identifier_pattern",
            Mozjs::StatementIdentifier => "statement_identifier",
            Mozjs::Error => "ERROR",
        }
    }
}

impl From<u16> for Mozjs {
    #[inline(always)]
    fn from(x: u16) -> Self {
        num::FromPrimitive::from_u16(x).unwrap_or(Self::Error)
    }
}

// Mozjs == u16
impl PartialEq<u16> for Mozjs {
    #[inline(always)]
    fn eq(&self, x: &u16) -> bool {
        *self == Into::<Self>::into(*x)
    }
}

// u16 == Mozjs
impl PartialEq<Mozjs> for u16 {
    #[inline(always)]
    fn eq(&self, x: &Mozjs) -> bool {
        *x == *self
    }
}
