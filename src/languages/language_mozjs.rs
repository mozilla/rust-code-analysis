// Code generated; DO NOT EDIT.

#[derive(Clone, Debug, PartialEq, FromPrimitive)]
pub enum Mozjs {
    End = 0,
    Identifier = 1,
    HashBangLine = 2,
    Export = 3,
    STAR = 4,
    Default = 5,
    LBRACE = 6,
    COMMA = 7,
    RBRACE = 8,
    As = 9,
    Import2 = 10,
    From = 11,
    Var = 12,
    Let = 13,
    Const = 14,
    Else = 15,
    If = 16,
    Switch = 17,
    For = 18,
    LPAREN = 19,
    RPAREN = 20,
    Await = 21,
    In = 22,
    Of = 23,
    While = 24,
    Do = 25,
    Try = 26,
    With = 27,
    Break = 28,
    Continue = 29,
    Debugger = 30,
    Return = 31,
    Throw = 32,
    SEMI = 33,
    COLON = 34,
    Case = 35,
    Catch = 36,
    Finally = 37,
    Yield = 38,
    EQ = 39,
    LBRACK = 40,
    RBRACK = 41,
    LT = 42,
    GT = 43,
    SLASH = 44,
    JsxText = 45,
    Identifier2 = 46,
    DOT = 47,
    Class2 = 48,
    Extends = 49,
    Async = 50,
    Function2 = 51,
    EQGT = 52,
    QMARKDOT = 53,
    New = 54,
    PLUSEQ = 55,
    DASHEQ = 56,
    STAREQ = 57,
    SLASHEQ = 58,
    PERCENTEQ = 59,
    CARETEQ = 60,
    AMPEQ = 61,
    PIPEEQ = 62,
    GTGTEQ = 63,
    GTGTGTEQ = 64,
    LTLTEQ = 65,
    STARSTAREQ = 66,
    AMPAMPEQ = 67,
    PIPEPIPEEQ = 68,
    QMARKQMARKEQ = 69,
    DOTDOTDOT = 70,
    QMARK = 71,
    AMPAMP = 72,
    PIPEPIPE = 73,
    GTGT = 74,
    GTGTGT = 75,
    LTLT = 76,
    AMP = 77,
    CARET = 78,
    PIPE = 79,
    PLUS = 80,
    DASH = 81,
    PERCENT = 82,
    STARSTAR = 83,
    LTEQ = 84,
    EQEQ = 85,
    EQEQEQ = 86,
    BANGEQ = 87,
    BANGEQEQ = 88,
    GTEQ = 89,
    QMARKQMARK = 90,
    Instanceof = 91,
    BANG = 92,
    TILDE = 93,
    Typeof = 94,
    Void = 95,
    Delete = 96,
    PLUSPLUS = 97,
    DASHDASH = 98,
    DQUOTE = 99,
    StringToken1 = 100,
    SQUOTE = 101,
    StringToken2 = 102,
    EscapeSequence = 103,
    Comment = 104,
    BQUOTE = 105,
    DOLLARLBRACE = 106,
    SLASH2 = 107,
    RegexPattern = 108,
    RegexFlags = 109,
    Number = 110,
    Target = 111,
    This = 112,
    Super = 113,
    True = 114,
    False = 115,
    Null = 116,
    Undefined = 117,
    AT = 118,
    Static = 119,
    Get = 120,
    Set = 121,
    Preproc = 122,
    AutomaticSemicolon = 123,
    TemplateChars = 124,
    Program = 125,
    ExportStatement = 126,
    ExportClause = 127,
    ExportSpecifier = 128,
    Declaration = 129,
    Import = 130,
    ImportStatement = 131,
    ImportClause = 132,
    FromClause = 133,
    NamespaceImport = 134,
    NamedImports = 135,
    ExpressionStatement = 136,
    VariableDeclaration = 137,
    LexicalDeclaration = 138,
    VariableDeclarator = 139,
    StatementBlock = 140,
    ElseClause = 141,
    IfStatement = 142,
    SwitchStatement = 143,
    ForStatement = 144,
    ForInStatement = 145,
    ForHeader = 146,
    WhileStatement = 147,
    DoStatement = 148,
    TryStatement = 149,
    WithStatement = 150,
    BreakStatement = 151,
    ContinueStatement = 152,
    DebuggerStatement = 153,
    ReturnStatement = 154,
    ThrowStatement = 155,
    EmptyStatement = 156,
    LabeledStatement = 157,
    SwitchBody = 158,
    SwitchCase = 159,
    SwitchDefault = 160,
    CatchClause = 161,
    FinallyClause = 162,
    ParenthesizedExpression = 163,
    Expression = 164,
    PrimaryExpression = 165,
    YieldExpression = 166,
    Object = 167,
    ObjectPattern = 168,
    AssignmentPattern = 169,
    ObjectAssignmentPattern = 170,
    Array = 171,
    ArrayPattern = 172,
    JsxElement = 173,
    JsxFragment = 174,
    JsxExpression = 175,
    JsxOpeningElement = 176,
    NestedIdentifier = 177,
    JsxNamespaceName = 178,
    JsxClosingElement = 179,
    JsxSelfClosingElement = 180,
    JsxAttribute = 181,
    Class = 182,
    ClassDeclaration = 183,
    ClassHeritage = 184,
    Function = 185,
    FunctionDeclaration = 186,
    GeneratorFunction = 187,
    GeneratorFunctionDeclaration = 188,
    ArrowFunction = 189,
    CallExpression = 190,
    NewExpression = 191,
    AwaitExpression = 192,
    MemberExpression = 193,
    SubscriptExpression = 194,
    AssignmentExpression = 195,
    AugmentedAssignmentLhs = 196,
    AugmentedAssignmentExpression = 197,
    Initializer = 198,
    DestructuringPattern = 199,
    SpreadElement = 200,
    TernaryExpression = 201,
    BinaryExpression = 202,
    UnaryExpression = 203,
    UpdateExpression = 204,
    SequenceExpression = 205,
    String = 206,
    TemplateString = 207,
    TemplateSubstitution = 208,
    Regex = 209,
    MetaProperty = 210,
    Arguments = 211,
    Decorator = 212,
    MemberExpression2 = 213,
    CallExpression2 = 214,
    ClassBody = 215,
    PublicFieldDefinition = 216,
    FormalParameters = 217,
    Pattern = 218,
    RestPattern = 219,
    MethodDefinition = 220,
    Pair = 221,
    PairPattern = 222,
    PropertyName = 223,
    ComputedPropertyName = 224,
    ProgramRepeat1 = 225,
    ExportStatementRepeat1 = 226,
    ExportClauseRepeat1 = 227,
    NamedImportsRepeat1 = 228,
    VariableDeclarationRepeat1 = 229,
    SwitchBodyRepeat1 = 230,
    ObjectRepeat1 = 231,
    ObjectPatternRepeat1 = 232,
    ArrayRepeat1 = 233,
    ArrayPatternRepeat1 = 234,
    JsxElementRepeat1 = 235,
    JsxOpeningElementRepeat1 = 236,
    StringRepeat1 = 237,
    StringRepeat2 = 238,
    TemplateStringRepeat1 = 239,
    ClassBodyRepeat1 = 240,
    FormalParametersRepeat1 = 241,
    ImportSpecifier = 242,
    PropertyIdentifier = 243,
    ShorthandPropertyIdentifier = 244,
    ShorthandPropertyIdentifierPattern = 245,
    StatementIdentifier = 246,
    Error = 247,
}

#[allow(clippy::unreadable_literal)]
static KEYS: phf::Map<&'static str, Mozjs> = ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
        (2, 4),
        (0, 64),
        (5, 115),
        (0, 1),
        (0, 71),
        (0, 112),
        (5, 164),
        (0, 1),
        (0, 9),
        (1, 64),
        (0, 12),
        (1, 122),
        (1, 34),
        (0, 2),
        (1, 161),
        (0, 9),
        (0, 0),
        (1, 54),
        (0, 1),
        (4, 119),
        (0, 61),
        (6, 92),
        (0, 182),
        (1, 188),
        (0, 24),
        (0, 60),
        (0, 6),
        (2, 197),
        (0, 73),
        (0, 106),
        (0, 75),
        (2, 123),
        (17, 45),
        (6, 19),
        (41, 55),
        (0, 16),
        (2, 166),
        (0, 18),
        (12, 49),
        (0, 38),
        (0, 59),
        (0, 26),
        (2, 125),
        (0, 97),
        (8, 32),
        (49, 189),
        (1, 1),
        (0, 8),
    ],
    entries: &[
        ("instanceof", Mozjs::Instanceof),
        ("continue_statement", Mozjs::ContinueStatement),
        ("preproc", Mozjs::Preproc),
        ("**=", Mozjs::STARSTAREQ),
        (">>=", Mozjs::GTGTEQ),
        ("jsx_text", Mozjs::JsxText),
        ("statement_identifier", Mozjs::StatementIdentifier),
        ("<", Mozjs::LT),
        ("jsx_self_closing_element", Mozjs::JsxSelfClosingElement),
        ("^=", Mozjs::CARETEQ),
        ("+=", Mozjs::PLUSEQ),
        ("statement_block", Mozjs::StatementBlock),
        ("false", Mozjs::False),
        ("formal_parameters", Mozjs::FormalParameters),
        ("expression_statement", Mozjs::ExpressionStatement),
        (
            "shorthand_property_identifier_pattern",
            Mozjs::ShorthandPropertyIdentifierPattern,
        ),
        ("function", Mozjs::Function),
        ("&&", Mozjs::AMPAMP),
        ("var", Mozjs::Var),
        ("const", Mozjs::Const),
        ("<<", Mozjs::LTLT),
        ("export_specifier", Mozjs::ExportSpecifier),
        ("rest_pattern", Mozjs::RestPattern),
        ("array_pattern", Mozjs::ArrayPattern),
        ("&", Mozjs::AMP),
        ("pair_pattern", Mozjs::PairPattern),
        ("??=", Mozjs::QMARKQMARKEQ),
        ("]", Mozjs::RBRACK),
        ("object_repeat1", Mozjs::ObjectRepeat1),
        ("-=", Mozjs::DASHEQ),
        ("comment", Mozjs::Comment),
        ("_from_clause", Mozjs::FromClause),
        ("debugger", Mozjs::Debugger),
        (")", Mozjs::RPAREN),
        ("identifier", Mozjs::Identifier),
        ("if", Mozjs::If),
        ("jsx_fragment", Mozjs::JsxFragment),
        ("named_imports", Mozjs::NamedImports),
        ("/=", Mozjs::SLASHEQ),
        ("import", Mozjs::Import),
        ("||=", Mozjs::PIPEPIPEEQ),
        ("import_specifier", Mozjs::ImportSpecifier),
        ("template_string", Mozjs::TemplateString),
        ("**", Mozjs::STARSTAR),
        ("while_statement", Mozjs::WhileStatement),
        ("for_statement", Mozjs::ForStatement),
        ("jsx_element_repeat1", Mozjs::JsxElementRepeat1),
        (">>>", Mozjs::GTGTGT),
        ("import_clause", Mozjs::ImportClause),
        ("null", Mozjs::Null),
        ("with_statement", Mozjs::WithStatement),
        ("variable_declarator", Mozjs::VariableDeclarator),
        ("*=", Mozjs::STAREQ),
        ("decorator", Mozjs::Decorator),
        ("namespace_import", Mozjs::NamespaceImport),
        ("import_statement", Mozjs::ImportStatement),
        ("&=", Mozjs::AMPEQ),
        ("of", Mozjs::Of),
        ("yield_expression", Mozjs::YieldExpression),
        ("++", Mozjs::PLUSPLUS),
        ("|", Mozjs::PIPE),
        ("export_clause", Mozjs::ExportClause),
        ("arguments", Mozjs::Arguments),
        ("escape_sequence", Mozjs::EscapeSequence),
        ("switch_body", Mozjs::SwitchBody),
        ("async", Mozjs::Async),
        ("export", Mozjs::Export),
        (",", Mozjs::COMMA),
        ("switch_default", Mozjs::SwitchDefault),
        ("do_statement", Mozjs::DoStatement),
        (">>", Mozjs::GTGT),
        ("+", Mozjs::PLUS),
        ("string_repeat2", Mozjs::StringRepeat2),
        ("break_statement", Mozjs::BreakStatement),
        ("_for_header", Mozjs::ForHeader),
        ("||", Mozjs::PIPEPIPE),
        ("template_string_repeat1", Mozjs::TemplateStringRepeat1),
        ("get", Mozjs::Get),
        ("object_pattern_repeat1", Mozjs::ObjectPatternRepeat1),
        ("number", Mozjs::Number),
        ("jsx_closing_element", Mozjs::JsxClosingElement),
        ("}", Mozjs::RBRACE),
        ("typeof", Mozjs::Typeof),
        ("regex_pattern", Mozjs::RegexPattern),
        ("end", Mozjs::End),
        ("pair", Mozjs::Pair),
        ("spread_element", Mozjs::SpreadElement),
        ("function_declaration", Mozjs::FunctionDeclaration),
        ("for_in_statement", Mozjs::ForInStatement),
        ("=", Mozjs::EQ),
        ("undefined", Mozjs::Undefined),
        ("string_repeat1", Mozjs::StringRepeat1),
        ("await_expression", Mozjs::AwaitExpression),
        ("primary_expression", Mozjs::PrimaryExpression),
        ("throw", Mozjs::Throw),
        ("generator_function", Mozjs::GeneratorFunction),
        ("'", Mozjs::SQUOTE),
        ("binary_expression", Mozjs::BinaryExpression),
        ("-", Mozjs::DASH),
        (":", Mozjs::COLON),
        ("target", Mozjs::Target),
        ("jsx_expression", Mozjs::JsxExpression),
        ("...", Mozjs::DOTDOTDOT),
        ("labeled_statement", Mozjs::LabeledStatement),
        (">", Mozjs::GT),
        ("===", Mozjs::EQEQEQ),
        ("formal_parameters_repeat1", Mozjs::FormalParametersRepeat1),
        ("<=", Mozjs::LTEQ),
        ("jsx_opening_element", Mozjs::JsxOpeningElement),
        ("--", Mozjs::DASHDASH),
        ("`", Mozjs::BQUOTE),
        ("array", Mozjs::Array),
        ("program_repeat1", Mozjs::ProgramRepeat1),
        ("case", Mozjs::Case),
        ("switch_body_repeat1", Mozjs::SwitchBodyRepeat1),
        ("jsx_element", Mozjs::JsxElement),
        ("switch_statement", Mozjs::SwitchStatement),
        ("new", Mozjs::New),
        ("{", Mozjs::LBRACE),
        ("with", Mozjs::With),
        ("_initializer", Mozjs::Initializer),
        ("class_declaration", Mozjs::ClassDeclaration),
        ("break", Mozjs::Break),
        ("|=", Mozjs::PIPEEQ),
        ("yield", Mozjs::Yield),
        ("from", Mozjs::From),
        ("variable_declaration", Mozjs::VariableDeclaration),
        ("!==", Mozjs::BANGEQEQ),
        ("~", Mozjs::TILDE),
        ("ternary_expression", Mozjs::TernaryExpression),
        ("else_clause", Mozjs::ElseClause),
        ("in", Mozjs::In),
        ("void", Mozjs::Void),
        ("declaration", Mozjs::Declaration),
        ("default", Mozjs::Default),
        ("true", Mozjs::True),
        ("computed_property_name", Mozjs::ComputedPropertyName),
        ("class_heritage", Mozjs::ClassHeritage),
        ("continue", Mozjs::Continue),
        (".", Mozjs::DOT),
        ("sequence_expression", Mozjs::SequenceExpression),
        ("if_statement", Mozjs::IfStatement),
        ("switch", Mozjs::Switch),
        ("export_statement_repeat1", Mozjs::ExportStatementRepeat1),
        ("new_expression", Mozjs::NewExpression),
        ("string_token1", Mozjs::StringToken1),
        ("_property_name", Mozjs::PropertyName),
        ("@", Mozjs::AT),
        ("object", Mozjs::Object),
        ("empty_statement", Mozjs::EmptyStatement),
        ("string_token2", Mozjs::StringToken2),
        ("string", Mozjs::String),
        ("subscript_expression", Mozjs::SubscriptExpression),
        ("%", Mozjs::PERCENT),
        ("*", Mozjs::STAR),
        ("assignment_pattern", Mozjs::AssignmentPattern),
        ("try_statement", Mozjs::TryStatement),
        ("extends", Mozjs::Extends),
        ("_destructuring_pattern", Mozjs::DestructuringPattern),
        ("regex_flags", Mozjs::RegexFlags),
        ("ERROR", Mozjs::Error),
        ("meta_property", Mozjs::MetaProperty),
        ("named_imports_repeat1", Mozjs::NamedImportsRepeat1),
        (">>>=", Mozjs::GTGTGTEQ),
        ("throw_statement", Mozjs::ThrowStatement),
        ("unary_expression", Mozjs::UnaryExpression),
        ("assignment_expression", Mozjs::AssignmentExpression),
        ("?.", Mozjs::QMARKDOT),
        ("object_assignment_pattern", Mozjs::ObjectAssignmentPattern),
        ("return_statement", Mozjs::ReturnStatement),
        ("for", Mozjs::For),
        ("program", Mozjs::Program),
        ("let", Mozjs::Let),
        ("hash_bang_line", Mozjs::HashBangLine),
        ("method_definition", Mozjs::MethodDefinition),
        ("arrow_function", Mozjs::ArrowFunction),
        ("_template_chars", Mozjs::TemplateChars),
        ("super", Mozjs::Super),
        ("set", Mozjs::Set),
        ("catch_clause", Mozjs::CatchClause),
        ("parenthesized_expression", Mozjs::ParenthesizedExpression),
        ("jsx_attribute", Mozjs::JsxAttribute),
        ("array_repeat1", Mozjs::ArrayRepeat1),
        ("!=", Mozjs::BANGEQ),
        ("return", Mozjs::Return),
        ("_augmented_assignment_lhs", Mozjs::AugmentedAssignmentLhs),
        ("await", Mozjs::Await),
        ("this", Mozjs::This),
        ("_automatic_semicolon", Mozjs::AutomaticSemicolon),
        ("as", Mozjs::As),
        ("/", Mozjs::SLASH),
        ("call_expression", Mozjs::CallExpression),
        ("=>", Mozjs::EQGT),
        ("switch_case", Mozjs::SwitchCase),
        ("!", Mozjs::BANG),
        ("%=", Mozjs::PERCENTEQ),
        ("lexical_declaration", Mozjs::LexicalDeclaration),
        ("?", Mozjs::QMARK),
        ("property_identifier", Mozjs::PropertyIdentifier),
        (
            "augmented_assignment_expression",
            Mozjs::AugmentedAssignmentExpression,
        ),
        ("class", Mozjs::Class),
        ("debugger_statement", Mozjs::DebuggerStatement),
        ("public_field_definition", Mozjs::PublicFieldDefinition),
        ("else", Mozjs::Else),
        ("template_substitution", Mozjs::TemplateSubstitution),
        ("export_statement", Mozjs::ExportStatement),
        (">=", Mozjs::GTEQ),
        ("export_clause_repeat1", Mozjs::ExportClauseRepeat1),
        ("object_pattern", Mozjs::ObjectPattern),
        ("[", Mozjs::LBRACK),
        ("catch", Mozjs::Catch),
        ("array_pattern_repeat1", Mozjs::ArrayPatternRepeat1),
        (
            "jsx_opening_element_repeat1",
            Mozjs::JsxOpeningElementRepeat1,
        ),
        ("^", Mozjs::CARET),
        ("delete", Mozjs::Delete),
        ("jsx_namespace_name", Mozjs::JsxNamespaceName),
        ("class_body_repeat1", Mozjs::ClassBodyRepeat1),
        ("finally_clause", Mozjs::FinallyClause),
        ("(", Mozjs::LPAREN),
        ("pattern", Mozjs::Pattern),
        (
            "variable_declaration_repeat1",
            Mozjs::VariableDeclarationRepeat1,
        ),
        (
            "generator_function_declaration",
            Mozjs::GeneratorFunctionDeclaration,
        ),
        ("class_body", Mozjs::ClassBody),
        ("do", Mozjs::Do),
        (";", Mozjs::SEMI),
        ("expression", Mozjs::Expression),
        ("<<=", Mozjs::LTLTEQ),
        ("==", Mozjs::EQEQ),
        ("regex", Mozjs::Regex),
        ("while", Mozjs::While),
        ("try", Mozjs::Try),
        ("static", Mozjs::Static),
        ("member_expression", Mozjs::MemberExpression),
        ("&&=", Mozjs::AMPAMPEQ),
        ("finally", Mozjs::Finally),
        ("nested_identifier", Mozjs::NestedIdentifier),
        ("${", Mozjs::DOLLARLBRACE),
        ("\\\"", Mozjs::DQUOTE),
        ("??", Mozjs::QMARKQMARK),
        (
            "shorthand_property_identifier",
            Mozjs::ShorthandPropertyIdentifier,
        ),
        ("update_expression", Mozjs::UpdateExpression),
    ],
};

impl From<&str> for Mozjs {
    #[inline(always)]
    fn from(key: &str) -> Self {
        KEYS.get(key).unwrap().clone()
    }
}

impl From<u16> for Mozjs {
    #[inline(always)]
    fn from(x: u16) -> Self {
        num::FromPrimitive::from_u16(x).unwrap_or(Self::Error)
    }
}

// Mozjs == u16
impl PartialEq<u16> for Mozjs {
    #[inline(always)]
    fn eq(&self, x: &u16) -> bool {
        *self == Mozjs::from(*x)
    }
}

// u16 == Mozjs
impl PartialEq<Mozjs> for u16 {
    #[inline(always)]
    fn eq(&self, x: &Mozjs) -> bool {
        *x == *self
    }
}
