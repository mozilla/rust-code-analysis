// Code generated; DO NOT EDIT.

#[derive(Clone, Debug, PartialEq, FromPrimitive)]
pub enum Cpp {
    End = 0,
    Identifier = 1,
    HASHinclude = 2,
    LF = 3,
    HASHdefine = 4,
    LPAREN = 5,
    DOTDOTDOT = 6,
    COMMA = 7,
    RPAREN = 8,
    HASHif = 9,
    HASHendif = 10,
    HASHifdef = 11,
    HASHifndef = 12,
    HASHelse = 13,
    HASHelif = 14,
    PreprocDirective = 15,
    PreprocArg = 16,
    LPAREN2 = 17,
    Defined = 18,
    BANG = 19,
    TILDE = 20,
    DASH = 21,
    PLUS = 22,
    STAR = 23,
    SLASH = 24,
    PERCENT = 25,
    PIPEPIPE = 26,
    AMPAMP = 27,
    PIPE = 28,
    CARET = 29,
    AMP = 30,
    EQEQ = 31,
    BANGEQ = 32,
    GT = 33,
    GTEQ = 34,
    LTEQ = 35,
    LT = 36,
    LTLT = 37,
    GTGT = 38,
    SEMI = 39,
    Typedef = 40,
    Extern = 41,
    Attribute2 = 42,
    Declspec = 43,
    Based = 44,
    Cdecl = 45,
    Clrcall = 46,
    Stdcall = 47,
    Fastcall = 48,
    Thiscall = 49,
    Vectorcall = 50,
    MsRestrictModifier = 51,
    MsUnsignedPtrModifier = 52,
    MsSignedPtrModifier = 53,
    Unaligned = 54,
    Unaligned2 = 55,
    LBRACE = 56,
    RBRACE = 57,
    LBRACK = 58,
    RBRACK = 59,
    EQ = 60,
    Static = 61,
    Register = 62,
    Inline = 63,
    Const = 64,
    Volatile = 65,
    Restrict = 66,
    Atomic = 67,
    Mutable = 68,
    Constexpr = 69,
    Signed = 70,
    Unsigned = 71,
    Long = 72,
    Short = 73,
    PrimitiveType = 74,
    Enum = 75,
    Class = 76,
    Struct = 77,
    Union = 78,
    COLON = 79,
    If = 80,
    Else = 81,
    Switch = 82,
    Case = 83,
    Default = 84,
    While = 85,
    Do = 86,
    For = 87,
    Return = 88,
    Break = 89,
    Continue = 90,
    Goto = 91,
    QMARK = 92,
    STAREQ = 93,
    SLASHEQ = 94,
    PERCENTEQ = 95,
    PLUSEQ = 96,
    DASHEQ = 97,
    LTLTEQ = 98,
    GTGTEQ = 99,
    AMPEQ = 100,
    CARETEQ = 101,
    PIPEEQ = 102,
    DASHDASH = 103,
    PLUSPLUS = 104,
    Sizeof = 105,
    DOT = 106,
    DASHGT = 107,
    NumberLiteral = 108,
    LSQUOTE = 109,
    USQUOTE = 110,
    USQUOTE2 = 111,
    U8SQUOTE = 112,
    SQUOTE = 113,
    CharLiteralToken1 = 114,
    LDQUOTE = 115,
    UDQUOTE = 116,
    UDQUOTE2 = 117,
    U8DQUOTE = 118,
    DQUOTE = 119,
    StringLiteralToken1 = 120,
    EscapeSequence = 121,
    SystemLibString = 122,
    True = 123,
    False = 124,
    Null = 125,
    Comment = 126,
    Decltype2 = 127,
    Final = 128,
    Override = 129,
    Virtual = 130,
    Explicit = 131,
    Public = 132,
    Private = 133,
    Protected = 134,
    Auto = 135,
    Typename = 136,
    Template = 137,
    GT2 = 138,
    COLONCOLON = 139,
    Operator = 140,
    Delete = 141,
    Friend = 142,
    Noexcept2 = 143,
    Throw = 144,
    Namespace = 145,
    Using = 146,
    StaticAssert = 147,
    Try = 148,
    Catch = 149,
    LBRACKLBRACK = 150,
    RBRACKRBRACK = 151,
    New = 152,
    OperatorName = 153,
    This = 154,
    Nullptr = 155,
    AloneMacro = 156,
    AloneMacroCallToken1 = 157,
    CACHETRYINSPECT = 158,
    CACHETRYUNWRAP = 159,
    FORWARD = 160,
    FORWARDSETATTRIBUTE = 161,
    IDBTRYINSPECT = 162,
    IDBTRYUNWRAP = 163,
    LSTRYINSPECT = 164,
    LSTRYUNWRAP = 165,
    SDBTRYINSPECT = 166,
    SDBTRYUNWRAP = 167,
    PSGET = 168,
    PSGETANDSET = 169,
    PSGETLOCKLESS = 170,
    QMTRYINSPECT = 171,
    QMNOTEONLYTRYUNWRAP = 172,
    QMTRYUNWRAP = 173,
    QMWARNONLYTRYUNWRAP = 174,
    MOZDECLUSEGUARDOBJECTNOTIFIER = 175,
    MOZALLOCATOR = 176,
    MOZALLOWTEMPORARY = 177,
    MOZALWAYSINLINE = 178,
    MOZALWAYSINLINEEVENDEBUG = 179,
    MOZASANBLACKLIST = 180,
    MOZCANRUNSCRIPT = 181,
    MOZCANRUNSCRIPTBOUNDARY = 182,
    MOZCANRUNSCRIPTFORDEFINITION = 183,
    MOZCOLD = 184,
    MOZFALLTHROUGH = 185,
    MOZFORMATPRINTF = 186,
    MOZHAVEANALYZERNORETURN = 187,
    MOZHAVEASANBLACKLIST = 188,
    MOZHAVENEVERINLINE = 189,
    MOZHAVENORETURN = 190,
    MOZHAVENORETURNPTR = 191,
    MOZHAVENOSANITIZEATTR = 192,
    MOZHAVESIGNEDOVERFLOWSANITIZEATTR = 193,
    MOZHAVEUNSIGNEDOVERFLOWSANITIZEATTR = 194,
    MOZHEAPALLOCATOR = 195,
    MOZHEAPCLASS = 196,
    MOZIMPLICIT = 197,
    MOZINHERITTYPEANNOTATIONSFROMTEMPLATEARGS = 198,
    MOZINITOUTSIDECTOR = 199,
    MOZISCLASSINIT = 200,
    MOZISREFPTR = 201,
    MOZISSMARTPTRTOREFCOUNTED = 202,
    MOZMAYBEUNUSED = 203,
    MOZMAYCALLAFTERMUSTRETURN = 204,
    MOZMUSTOVERRIDE = 205,
    MOZMUSTRETURNFROMCALLERIFTHISISARG = 206,
    MOZMUSTUSE = 207,
    MOZMUSTUSETYPE = 208,
    MOZNEEDSMEMMOVABLEMEMBERS = 209,
    MOZNEEDSMEMMOVABLETYPE = 210,
    MOZNEEDSNOVTABLETYPE = 211,
    MOZNEVERINLINE = 212,
    MOZNEVERINLINEDEBUG = 213,
    MOZNONHEAPCLASS = 214,
    MOZNONNULL = 215,
    MOZNONNULLRETURN = 216,
    MOZNONAUTOABLE = 217,
    MOZNONMEMMOVABLE = 218,
    MOZNONOWNINGREF = 219,
    MOZNONPARAM = 220,
    MOZNONTEMPORARYCLASS = 221,
    MOZNORETURN = 222,
    MOZNORETURNPTR = 223,
    MOZNOADDREFRELEASEONRETURN = 224,
    MOZNOARITHMETICEXPRINARGUMENT = 225,
    MOZNODANGLINGONTEMPORARIES = 226,
    MOZNOSANITIZESIGNEDOVERFLOW = 227,
    MOZNOSANITIZEUNSIGNEDOVERFLOW = 228,
    MOZONLYUSEDTOAVOIDSTATICCONSTRUCTORS = 229,
    MOZOWNINGREF = 230,
    MOZPOPDISABLENONTRIVIALUNIONWARNINGS = 231,
    MOZPRETENDNORETURNFORSTATICANALYSIS = 232,
    MOZPUSHDISABLENONTRIVIALUNIONWARNINGS = 233,
    MOZRAII = 234,
    MOZREQUIREDBASEMETHOD = 235,
    MOZSTACKCLASS = 236,
    MOZSTATICCLASS = 237,
    MOZSTATICLOCALCLASS = 238,
    MOZTEMPORARYCLASS = 239,
    MOZTRIVIALCTORDTOR = 240,
    MOZTSANBLACKLIST = 241,
    MOZUNSAFEREF = 242,
    MOZXPCOMABI = 243,
    JSPUBLICAPI = 244,
    RawStringLiteral = 245,
    TranslationUnit = 246,
    PreprocInclude = 247,
    PreprocDef = 248,
    PreprocFunctionDef = 249,
    PreprocParams = 250,
    PreprocCall = 251,
    PreprocIf = 252,
    PreprocIfdef = 253,
    PreprocElse = 254,
    PreprocElif = 255,
    PreprocIf2 = 256,
    PreprocIfdef2 = 257,
    PreprocElse2 = 258,
    PreprocElif2 = 259,
    PreprocExpression = 260,
    ParenthesizedExpression = 261,
    PreprocDefined = 262,
    UnaryExpression = 263,
    CallExpression = 264,
    ArgumentList = 265,
    BinaryExpression = 266,
    FunctionDefinition = 267,
    Declaration = 268,
    TypeDefinition = 269,
    DeclarationSpecifiers = 270,
    LinkageSpecification = 271,
    AttributeSpecifier = 272,
    MsDeclspecModifier = 273,
    MsBasedModifier = 274,
    MsCallModifier = 275,
    MsUnalignedPtrModifier = 276,
    MsPointerModifier = 277,
    DeclarationList = 278,
    Declarator = 279,
    FieldDeclarator = 280,
    TypeDeclarator = 281,
    AbstractDeclarator = 282,
    ParenthesizedDeclarator = 283,
    ParenthesizedDeclarator2 = 284,
    ParenthesizedDeclarator3 = 285,
    AbstractParenthesizedDeclarator = 286,
    PointerDeclarator = 287,
    PointerDeclarator2 = 288,
    PointerDeclarator3 = 289,
    AbstractPointerDeclarator = 290,
    FunctionDeclarator = 291,
    FunctionDeclarator2 = 292,
    FunctionDeclarator3 = 293,
    AbstractFunctionDeclarator = 294,
    ArrayDeclarator = 295,
    ArrayDeclarator2 = 296,
    ArrayDeclarator3 = 297,
    AbstractArrayDeclarator = 298,
    InitDeclarator = 299,
    CompoundStatement = 300,
    StorageClassSpecifier = 301,
    TypeQualifier = 302,
    TypeSpecifier = 303,
    SizedTypeSpecifier = 304,
    EnumSpecifier = 305,
    EnumeratorList = 306,
    StructSpecifier = 307,
    UnionSpecifier = 308,
    FieldDeclarationList = 309,
    FieldDeclarationListItem = 310,
    FieldDeclaration = 311,
    BitfieldClause = 312,
    Enumerator = 313,
    ParameterList = 314,
    ParameterDeclaration = 315,
    LabeledStatement = 316,
    ExpressionStatement = 317,
    IfStatement = 318,
    SwitchStatement = 319,
    CaseStatement = 320,
    WhileStatement = 321,
    DoStatement = 322,
    ForStatement = 323,
    ReturnStatement = 324,
    BreakStatement = 325,
    ContinueStatement = 326,
    GotoStatement = 327,
    Expression = 328,
    CommaExpression = 329,
    ConditionalExpression = 330,
    AssignmentExpression = 331,
    PointerExpression = 332,
    UnaryExpression2 = 333,
    BinaryExpression2 = 334,
    UpdateExpression = 335,
    CastExpression = 336,
    TypeDescriptor = 337,
    SizeofExpression = 338,
    SubscriptExpression = 339,
    CallExpression2 = 340,
    ArgumentList2 = 341,
    FieldExpression = 342,
    CompoundLiteralExpression = 343,
    ParenthesizedExpression2 = 344,
    InitializerList = 345,
    InitializerPair = 346,
    SubscriptDesignator = 347,
    FieldDesignator = 348,
    CharLiteral = 349,
    ConcatenatedString = 350,
    StringLiteral = 351,
    EmptyDeclaration = 352,
    Decltype = 353,
    ClassSpecifier = 354,
    ClassName = 355,
    VirtualSpecifier = 356,
    VirtualFunctionSpecifier = 357,
    ExplicitFunctionSpecifier = 358,
    BaseClassClause = 359,
    EnumBaseClause = 360,
    DependentType = 361,
    TemplateDeclaration = 362,
    TemplateInstantiation = 363,
    TemplateParameterList = 364,
    TypeParameterDeclaration = 365,
    VariadicTypeParameterDeclaration = 366,
    OptionalTypeParameterDeclaration = 367,
    TemplateTemplateParameterDeclaration = 368,
    OptionalParameterDeclaration = 369,
    VariadicParameterDeclaration = 370,
    VariadicDeclarator = 371,
    ReferenceDeclarator = 372,
    OperatorCast = 373,
    FieldInitializerList = 374,
    FieldInitializer = 375,
    FunctionDefinition2 = 376,
    ConstructorSpecifiers = 377,
    FunctionDefinition3 = 378,
    Declaration2 = 379,
    FunctionDefinition4 = 380,
    Declaration3 = 381,
    DefaultMethodClause = 382,
    DeleteMethodClause = 383,
    FriendDeclaration = 384,
    AccessSpecifier = 385,
    ReferenceDeclarator2 = 386,
    ReferenceDeclarator3 = 387,
    AbstractReferenceDeclarator = 388,
    StructuredBindingDeclarator = 389,
    TrailingReturnType = 390,
    Noexcept = 391,
    ThrowSpecifier = 392,
    TemplateType = 393,
    TemplateMethod = 394,
    TemplateFunction = 395,
    TemplateArgumentList = 396,
    NamespaceDefinition = 397,
    UsingDeclaration = 398,
    AliasDeclaration = 399,
    StaticAssertDeclaration = 400,
    ConditionClause = 401,
    Declaration4 = 402,
    ForRangeLoop = 403,
    ThrowStatement = 404,
    TryStatement = 405,
    CatchClause = 406,
    Attribute = 407,
    NewExpression = 408,
    NewDeclarator = 409,
    DeleteExpression = 410,
    LambdaExpression = 411,
    LambdaCaptureSpecifier = 412,
    LambdaDefaultCapture = 413,
    ParameterPackExpansion = 414,
    ParameterPackExpansion2 = 415,
    DestructorName = 416,
    ScopedFieldIdentifier = 417,
    ScopedIdentifier = 418,
    ScopedTypeIdentifier = 419,
    ScopedNamespaceIdentifier = 420,
    AloneMacroCall = 421,
    CallMacroWithDeclFirstArg = 422,
    MacroStatement = 423,
    MacroAnnotation = 424,
    TranslationUnitRepeat1 = 425,
    PreprocParamsRepeat1 = 426,
    PreprocIfInFieldDeclarationListRepeat1 = 427,
    PreprocArgumentListRepeat1 = 428,
    FunctionDefinitionRepeat1 = 429,
    DeclarationRepeat1 = 430,
    TypeDefinitionRepeat1 = 431,
    TypeDefinitionRepeat2 = 432,
    DeclarationSpecifiersRepeat1 = 433,
    PointerDeclaratorRepeat1 = 434,
    FunctionDeclaratorRepeat1 = 435,
    FunctionDeclaratorRepeat2 = 436,
    AbstractFunctionDeclaratorRepeat1 = 437,
    SizedTypeSpecifierRepeat1 = 438,
    EnumeratorListRepeat1 = 439,
    FieldDeclarationRepeat1 = 440,
    ParameterListRepeat1 = 441,
    CaseStatementRepeat1 = 442,
    ArgumentListRepeat1 = 443,
    InitializerListRepeat1 = 444,
    InitializerPairRepeat1 = 445,
    ConcatenatedStringRepeat1 = 446,
    StringLiteralRepeat1 = 447,
    ClassSpecifierRepeat1 = 448,
    BaseClassClauseRepeat1 = 449,
    TemplateParameterListRepeat1 = 450,
    FieldInitializerListRepeat1 = 451,
    StructuredBindingDeclaratorRepeat1 = 452,
    ThrowSpecifierRepeat1 = 453,
    TemplateArgumentListRepeat1 = 454,
    TryStatementRepeat1 = 455,
    AttributeRepeat1 = 456,
    AloneMacroCallRepeat1 = 457,
    FieldIdentifier = 458,
    NamespaceIdentifier = 459,
    StatementIdentifier = 460,
    TypeIdentifier = 461,
    Error = 462,
}

#[allow(clippy::unreadable_literal)]
static KEYS: phf::Map<&'static str, Cpp> = ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 104),
        (0, 6),
        (0, 29),
        (0, 38),
        (0, 68),
        (0, 368),
        (0, 0),
        (2, 23),
        (1, 107),
        (0, 2),
        (0, 80),
        (1, 176),
        (0, 10),
        (0, 0),
        (0, 4),
        (0, 12),
        (0, 118),
        (0, 39),
        (0, 25),
        (0, 158),
        (0, 209),
        (0, 92),
        (0, 9),
        (0, 113),
        (0, 17),
        (0, 154),
        (0, 1),
        (0, 50),
        (0, 299),
        (0, 3),
        (6, 284),
        (0, 29),
        (0, 105),
        (0, 287),
        (2, 57),
        (1, 20),
        (0, 252),
        (5, 220),
        (0, 38),
        (0, 118),
        (0, 0),
        (0, 423),
        (2, 89),
        (3, 212),
        (1, 135),
        (0, 0),
        (0, 107),
        (0, 4),
        (1, 57),
        (0, 265),
        (0, 7),
        (3, 186),
        (1, 221),
        (1, 0),
        (0, 5),
        (0, 16),
        (0, 236),
        (0, 0),
        (0, 0),
        (21, 172),
        (0, 16),
        (17, 248),
        (0, 280),
        (0, 120),
        (0, 73),
        (0, 36),
        (0, 391),
        (0, 92),
        (0, 35),
        (4, 256),
        (0, 49),
        (1, 222),
        (0, 8),
        (0, 13),
        (11, 428),
        (12, 30),
        (1, 5),
        (1, 289),
        (0, 81),
        (0, 138),
        (0, 345),
        (2, 274),
        (2, 228),
        (3, 2),
        (17, 356),
        (0, 0),
    ],
    entries: &[
        ("true", Cpp::True),
        ("type_descriptor", Cpp::TypeDescriptor),
        ("nullptr", Cpp::Nullptr),
        ("field_designator", Cpp::FieldDesignator),
        ("_declarator", Cpp::Declarator),
        ("operator", Cpp::Operator),
        ("&=", Cpp::AMPEQ),
        ("static_assert_declaration", Cpp::StaticAssertDeclaration),
        ("__clrcall", Cpp::Clrcall),
        ("^", Cpp::CARET),
        ("MOZ_IS_REFPTR", Cpp::MOZISREFPTR),
        ("field_declaration_list", Cpp::FieldDeclarationList),
        ("declaration", Cpp::Declaration),
        (",", Cpp::COMMA),
        ("template_type", Cpp::TemplateType),
        ("template_declaration", Cpp::TemplateDeclaration),
        ("alone_macro_call_token1", Cpp::AloneMacroCallToken1),
        ("MOZ_STATIC_LOCAL_CLASS", Cpp::MOZSTATICLOCALCLASS),
        ("__stdcall", Cpp::Stdcall),
        ("_abstract_declarator", Cpp::AbstractDeclarator),
        ("->", Cpp::DASHGT),
        ("reference_declarator", Cpp::ReferenceDeclarator),
        ("template", Cpp::Template),
        (
            "MOZ_MUST_RETURN_FROM_CALLER_IF_THIS_IS_ARG",
            Cpp::MOZMUSTRETURNFROMCALLERIFTHISISARG,
        ),
        ("long", Cpp::Long),
        ("cast_expression", Cpp::CastExpression),
        ("union", Cpp::Union),
        ("#endif", Cpp::HASHendif),
        ("u'", Cpp::USQUOTE),
        ("char_literal_token1", Cpp::CharLiteralToken1),
        ("pointer_declarator_repeat1", Cpp::PointerDeclaratorRepeat1),
        ("macro_annotation", Cpp::MacroAnnotation),
        ("MOZ_NORETURN_PTR", Cpp::MOZNORETURNPTR),
        ("<<=", Cpp::LTLTEQ),
        ("this", Cpp::This),
        ("return", Cpp::Return),
        ("LS_TRY_UNWRAP", Cpp::LSTRYUNWRAP),
        ("identifier", Cpp::Identifier),
        ("argument_list_repeat1", Cpp::ArgumentListRepeat1),
        ("#ifdef", Cpp::HASHifdef),
        ("MOZ_ALWAYS_INLINE", Cpp::MOZALWAYSINLINE),
        ("MOZ_COLD", Cpp::MOZCOLD),
        ("...", Cpp::DOTDOTDOT),
        ("array_declarator", Cpp::ArrayDeclarator),
        ("if", Cpp::If),
        ("public", Cpp::Public),
        (
            "abstract_parenthesized_declarator",
            Cpp::AbstractParenthesizedDeclarator,
        ),
        ("comma_expression", Cpp::CommaExpression),
        ("class_specifier_repeat1", Cpp::ClassSpecifierRepeat1),
        ("MOZ_TRIVIAL_CTOR_DTOR", Cpp::MOZTRIVIALCTORDTOR),
        ("attribute_specifier", Cpp::AttributeSpecifier),
        (
            "abstract_pointer_declarator",
            Cpp::AbstractPointerDeclarator,
        ),
        ("preproc_elif", Cpp::PreprocElif),
        ("_preproc_expression", Cpp::PreprocExpression),
        ("initializer_list", Cpp::InitializerList),
        ("#if", Cpp::HASHif),
        ("<=", Cpp::LTEQ),
        ("u8\\\"", Cpp::U8DQUOTE),
        ("attribute_repeat1", Cpp::AttributeRepeat1),
        ("preproc_include", Cpp::PreprocInclude),
        (
            "function_declarator_repeat1",
            Cpp::FunctionDeclaratorRepeat1,
        ),
        ("!=", Cpp::BANGEQ),
        ("MOZ_NON_OWNING_REF", Cpp::MOZNONOWNINGREF),
        ("destructor_name", Cpp::DestructorName),
        ("u\\\"", Cpp::UDQUOTE),
        ("%", Cpp::PERCENT),
        ("PS_GET_AND_SET", Cpp::PSGETANDSET),
        (
            "sized_type_specifier_repeat1",
            Cpp::SizedTypeSpecifierRepeat1,
        ),
        ("MOZ_ALLOCATOR", Cpp::MOZALLOCATOR),
        ("preproc_directive", Cpp::PreprocDirective),
        ("MOZ_STACK_CLASS", Cpp::MOZSTACKCLASS),
        ("CACHE_TRY_INSPECT", Cpp::CACHETRYINSPECT),
        ("|=", Cpp::PIPEEQ),
        ("%=", Cpp::PERCENTEQ),
        ("[", Cpp::LBRACK),
        (
            "MOZ_ALWAYS_INLINE_EVEN_DEBUG",
            Cpp::MOZALWAYSINLINEEVENDEBUG,
        ),
        ("PS_GET", Cpp::PSGET),
        ("delete", Cpp::Delete),
        ("\\n", Cpp::LF),
        ("__cdecl", Cpp::Cdecl),
        ("restrict", Cpp::Restrict),
        ("field_declaration_repeat1", Cpp::FieldDeclarationRepeat1),
        ("string_literal_token1", Cpp::StringLiteralToken1),
        ("delete_method_clause", Cpp::DeleteMethodClause),
        ("argument_list", Cpp::ArgumentList),
        ("template_parameter_list", Cpp::TemplateParameterList),
        ("ms_declspec_modifier", Cpp::MsDeclspecModifier),
        ("case_statement_repeat1", Cpp::CaseStatementRepeat1),
        (
            "compound_literal_expression",
            Cpp::CompoundLiteralExpression,
        ),
        ("typename", Cpp::Typename),
        ("statement_identifier", Cpp::StatementIdentifier),
        ("false", Cpp::False),
        ("alone_macro_call_repeat1", Cpp::AloneMacroCallRepeat1),
        ("update_expression", Cpp::UpdateExpression),
        ("++", Cpp::PLUSPLUS),
        ("pointer_declarator", Cpp::PointerDeclarator),
        ("preproc_call", Cpp::PreprocCall),
        ("-", Cpp::DASH),
        ("__fastcall", Cpp::Fastcall),
        ("{", Cpp::LBRACE),
        ("virtual", Cpp::Virtual),
        ("QM_WARNONLY_TRY_UNWRAP", Cpp::QMWARNONLYTRYUNWRAP),
        ("catch_clause", Cpp::CatchClause),
        ("storage_class_specifier", Cpp::StorageClassSpecifier),
        ("scoped_type_identifier", Cpp::ScopedTypeIdentifier),
        ("explicit", Cpp::Explicit),
        ("string_literal_repeat1", Cpp::StringLiteralRepeat1),
        (
            "function_declarator_repeat2",
            Cpp::FunctionDeclaratorRepeat2,
        ),
        ("MOZ_HEAP_CLASS", Cpp::MOZHEAPCLASS),
        ("unary_expression", Cpp::UnaryExpression),
        (
            "field_initializer_list_repeat1",
            Cpp::FieldInitializerListRepeat1,
        ),
        (
            "abstract_reference_declarator",
            Cpp::AbstractReferenceDeclarator,
        ),
        (
            "MOZ_NO_ARITHMETIC_EXPR_IN_ARGUMENT",
            Cpp::MOZNOARITHMETICEXPRINARGUMENT,
        ),
        ("LS_TRY_INSPECT", Cpp::LSTRYINSPECT),
        ("goto", Cpp::Goto),
        ("end", Cpp::End),
        ("ms_restrict_modifier", Cpp::MsRestrictModifier),
        ("struct_specifier", Cpp::StructSpecifier),
        ("operator_cast", Cpp::OperatorCast),
        ("struct", Cpp::Struct),
        ("namespace_definition", Cpp::NamespaceDefinition),
        ("raw_string_literal", Cpp::RawStringLiteral),
        ("extern", Cpp::Extern),
        ("CACHE_TRY_UNWRAP", Cpp::CACHETRYUNWRAP),
        ("lambda_expression", Cpp::LambdaExpression),
        ("lambda_default_capture", Cpp::LambdaDefaultCapture),
        ("SDB_TRY_UNWRAP", Cpp::SDBTRYUNWRAP),
        ("namespace_identifier", Cpp::NamespaceIdentifier),
        ("__declspec", Cpp::Declspec),
        ("binary_expression", Cpp::BinaryExpression),
        ("parenthesized_declarator", Cpp::ParenthesizedDeclarator),
        ("throw", Cpp::Throw),
        ("initializer_pair_repeat1", Cpp::InitializerPairRepeat1),
        ("decltype", Cpp::Decltype),
        ("unsigned", Cpp::Unsigned),
        ("_enum_base_clause", Cpp::EnumBaseClause),
        (
            "MOZ_NO_SANITIZE_UNSIGNED_OVERFLOW",
            Cpp::MOZNOSANITIZEUNSIGNEDOVERFLOW,
        ),
        ("#include", Cpp::HASHinclude),
        ("type_parameter_declaration", Cpp::TypeParameterDeclaration),
        ("_declaration_specifiers", Cpp::DeclarationSpecifiers),
        ("__vectorcall", Cpp::Vectorcall),
        (
            "abstract_function_declarator",
            Cpp::AbstractFunctionDeclarator,
        ),
        ("_field_declarator", Cpp::FieldDeclarator),
        ("register", Cpp::Register),
        ("friend_declaration", Cpp::FriendDeclaration),
        (
            "_declaration_specifiers_repeat1",
            Cpp::DeclarationSpecifiersRepeat1,
        ),
        ("&", Cpp::AMP),
        ("alias_declaration", Cpp::AliasDeclaration),
        ("static_assert", Cpp::StaticAssert),
        ("ms_based_modifier", Cpp::MsBasedModifier),
        ("enumerator_list", Cpp::EnumeratorList),
        ("MOZ_MAYBE_UNUSED", Cpp::MOZMAYBEUNUSED),
        ("new_declarator", Cpp::NewDeclarator),
        ("MOZ_UNSAFE_REF", Cpp::MOZUNSAFEREF),
        ("noexcept", Cpp::Noexcept),
        ("return_statement", Cpp::ReturnStatement),
        (".", Cpp::DOT),
        ("--", Cpp::DASHDASH),
        ("variadic_declarator", Cpp::VariadicDeclarator),
        ("MOZ_HAVE_ANALYZER_NORETURN", Cpp::MOZHAVEANALYZERNORETURN),
        (
            "_call_macro_with_decl_first_arg",
            Cpp::CallMacroWithDeclFirstArg,
        ),
        ("function_declarator", Cpp::FunctionDeclarator),
        ("preproc_def", Cpp::PreprocDef),
        ("+=", Cpp::PLUSEQ),
        ("template_argument_list", Cpp::TemplateArgumentList),
        ("]]", Cpp::RBRACKRBRACK),
        ("number_literal", Cpp::NumberLiteral),
        ("MOZ_NON_PARAM", Cpp::MOZNONPARAM),
        ("goto_statement", Cpp::GotoStatement),
        ("~", Cpp::TILDE),
        ("defined", Cpp::Defined),
        ("namespace", Cpp::Namespace),
        ("for_statement", Cpp::ForStatement),
        ("_unaligned", Cpp::Unaligned),
        ("for", Cpp::For),
        ("preproc_function_def", Cpp::PreprocFunctionDef),
        ("call_expression", Cpp::CallExpression),
        ("using", Cpp::Using),
        ("enumerator_list_repeat1", Cpp::EnumeratorListRepeat1),
        ("ms_call_modifier", Cpp::MsCallModifier),
        (
            "MOZ_CAN_RUN_SCRIPT_FOR_DEFINITION",
            Cpp::MOZCANRUNSCRIPTFORDEFINITION,
        ),
        ("MOZ_NEEDS_MEMMOVABLE_TYPE", Cpp::MOZNEEDSMEMMOVABLETYPE),
        ("sizeof_expression", Cpp::SizeofExpression),
        ("\\\"", Cpp::DQUOTE),
        ("MOZ_HAVE_NO_SANITIZE_ATTR", Cpp::MOZHAVENOSANITIZEATTR),
        (
            "concatenated_string_repeat1",
            Cpp::ConcatenatedStringRepeat1,
        ),
        ("parameter_pack_expansion", Cpp::ParameterPackExpansion),
        ("enum", Cpp::Enum),
        ("alone_macro", Cpp::AloneMacro),
        ("MOZ_TEMPORARY_CLASS", Cpp::MOZTEMPORARYCLASS),
        ("static", Cpp::Static),
        ("&&", Cpp::AMPAMP),
        ("default", Cpp::Default),
        ("ms_signed_ptr_modifier", Cpp::MsSignedPtrModifier),
        ("::", Cpp::COLONCOLON),
        ("labeled_statement", Cpp::LabeledStatement),
        ("^=", Cpp::CARETEQ),
        (";", Cpp::SEMI),
        ("MOZ_NONHEAP_CLASS", Cpp::MOZNONHEAPCLASS),
        ("ERROR", Cpp::Error),
        ("scoped_identifier", Cpp::ScopedIdentifier),
        ("declaration_list", Cpp::DeclarationList),
        ("case", Cpp::Case),
        ("_Atomic", Cpp::Atomic),
        ("translation_unit", Cpp::TranslationUnit),
        ("sized_type_specifier", Cpp::SizedTypeSpecifier),
        ("init_declarator", Cpp::InitDeclarator),
        ("escape_sequence", Cpp::EscapeSequence),
        ("MOZ_TSAN_BLACKLIST", Cpp::MOZTSANBLACKLIST),
        ("string_literal", Cpp::StringLiteral),
        ("base_class_clause_repeat1", Cpp::BaseClassClauseRepeat1),
        (">", Cpp::GT),
        (
            "structured_binding_declarator",
            Cpp::StructuredBindingDeclarator,
        ),
        ("new_expression", Cpp::NewExpression),
        ("=", Cpp::EQ),
        ("attribute", Cpp::Attribute),
        (
            "preproc_if_in_field_declaration_list_repeat1",
            Cpp::PreprocIfInFieldDeclarationListRepeat1,
        ),
        ("sizeof", Cpp::Sizeof),
        ("break", Cpp::Break),
        (
            "abstract_function_declarator_repeat1",
            Cpp::AbstractFunctionDeclaratorRepeat1,
        ),
        ("ms_pointer_modifier", Cpp::MsPointerModifier),
        ("pointer_expression", Cpp::PointerExpression),
        ("bitfield_clause", Cpp::BitfieldClause),
        ("MOZ_NON_AUTOABLE", Cpp::MOZNONAUTOABLE),
        ("FORWARD_SET_ATTRIBUTE", Cpp::FORWARDSETATTRIBUTE),
        ("preproc_params", Cpp::PreprocParams),
        ("template_method", Cpp::TemplateMethod),
        ("MOZ_REQUIRED_BASE_METHOD", Cpp::MOZREQUIREDBASEMETHOD),
        ("(", Cpp::LPAREN),
        (">=", Cpp::GTEQ),
        ("base_class_clause", Cpp::BaseClassClause),
        ("virtual_function_specifier", Cpp::VirtualFunctionSpecifier),
        ("MOZ_ALLOW_TEMPORARY", Cpp::MOZALLOWTEMPORARY),
        ("conditional_expression", Cpp::ConditionalExpression),
        ("_class_name", Cpp::ClassName),
        ("parameter_declaration", Cpp::ParameterDeclaration),
        (
            "MOZ_HAVE_UNSIGNED_OVERFLOW_SANITIZE_ATTR",
            Cpp::MOZHAVEUNSIGNEDOVERFLOWSANITIZEATTR,
        ),
        ("MOZ_OWNING_REF", Cpp::MOZOWNINGREF),
        ("<<", Cpp::LTLT),
        ("else", Cpp::Else),
        ("primitive_type", Cpp::PrimitiveType),
        ("MOZ_CAN_RUN_SCRIPT_BOUNDARY", Cpp::MOZCANRUNSCRIPTBOUNDARY),
        ("preproc_defined", Cpp::PreprocDefined),
        ("MOZ_STATIC_CLASS", Cpp::MOZSTATICCLASS),
        ("friend", Cpp::Friend),
        ("#ifndef", Cpp::HASHifndef),
        ("new", Cpp::New),
        (
            "structured_binding_declarator_repeat1",
            Cpp::StructuredBindingDeclaratorRepeat1,
        ),
        ("FORWARD", Cpp::FORWARD),
        ("MOZ_INIT_OUTSIDE_CTOR", Cpp::MOZINITOUTSIDECTOR),
        ("type_definition", Cpp::TypeDefinition),
        ("IDB_TRY_INSPECT", Cpp::IDBTRYINSPECT),
        ("_constructor_specifiers", Cpp::ConstructorSpecifiers),
        ("MOZ_CAN_RUN_SCRIPT", Cpp::MOZCANRUNSCRIPT),
        ("access_specifier", Cpp::AccessSpecifier),
        (
            "MOZ_POP_DISABLE_NONTRIVIAL_UNION_WARNINGS",
            Cpp::MOZPOPDISABLENONTRIVIALUNIONWARNINGS,
        ),
        ("QM_TRY_UNWRAP", Cpp::QMTRYUNWRAP),
        ("==", Cpp::EQEQ),
        ("'", Cpp::SQUOTE),
        ("_empty_declaration", Cpp::EmptyDeclaration),
        ("scoped_field_identifier", Cpp::ScopedFieldIdentifier),
        ("try", Cpp::Try),
        ("case_statement", Cpp::CaseStatement),
        ("_expression", Cpp::Expression),
        (
            "function_definition_repeat1",
            Cpp::FunctionDefinitionRepeat1,
        ),
        ("override", Cpp::Override),
        ("continue_statement", Cpp::ContinueStatement),
        ("volatile", Cpp::Volatile),
        (
            "MOZ_IS_SMARTPTR_TO_REFCOUNTED",
            Cpp::MOZISSMARTPTRTOREFCOUNTED,
        ),
        ("virtual_specifier", Cpp::VirtualSpecifier),
        ("?", Cpp::QMARK),
        ("field_initializer_list", Cpp::FieldInitializerList),
        ("constexpr", Cpp::Constexpr),
        ("QM_TRY_INSPECT", Cpp::QMTRYINSPECT),
        ("macro_statement", Cpp::MacroStatement),
        (
            "preproc_argument_list_repeat1",
            Cpp::PreprocArgumentListRepeat1,
        ),
        ("parameter_list", Cpp::ParameterList),
        ("MOZ_HAVE_NORETURN_PTR", Cpp::MOZHAVENORETURNPTR),
        ("char_literal", Cpp::CharLiteral),
        ("for_range_loop", Cpp::ForRangeLoop),
        ("ms_unsigned_ptr_modifier", Cpp::MsUnsignedPtrModifier),
        (
            "MOZ_INHERIT_TYPE_ANNOTATIONS_FROM_TEMPLATE_ARGS",
            Cpp::MOZINHERITTYPEANNOTATIONSFROMTEMPLATEARGS,
        ),
        ("delete_expression", Cpp::DeleteExpression),
        ("L'", Cpp::LSQUOTE),
        ("]", Cpp::RBRACK),
        (
            "scoped_namespace_identifier",
            Cpp::ScopedNamespaceIdentifier,
        ),
        ("/", Cpp::SLASH),
        ("translation_unit_repeat1", Cpp::TranslationUnitRepeat1),
        ("MOZ_NEEDS_NO_VTABLE_TYPE", Cpp::MOZNEEDSNOVTABLETYPE),
        ("switch_statement", Cpp::SwitchStatement),
        ("IDB_TRY_UNWRAP", Cpp::IDBTRYUNWRAP),
        ("preproc_else", Cpp::PreprocElse),
        ("enumerator", Cpp::Enumerator),
        ("type_identifier", Cpp::TypeIdentifier),
        ("lambda_capture_specifier", Cpp::LambdaCaptureSpecifier),
        ("u8'", Cpp::U8SQUOTE),
        ("MOZ_NONNULL", Cpp::MOZNONNULL),
        ("auto", Cpp::Auto),
        ("*", Cpp::STAR),
        ("abstract_array_declarator", Cpp::AbstractArrayDeclarator),
        ("SDB_TRY_INSPECT", Cpp::SDBTRYINSPECT),
        ("MOZ_HAVE_NEVER_INLINE", Cpp::MOZHAVENEVERINLINE),
        (
            "MOZ_PRETEND_NORETURN_FOR_STATIC_ANALYSIS",
            Cpp::MOZPRETENDNORETURNFORSTATICANALYSIS,
        ),
        ("enum_specifier", Cpp::EnumSpecifier),
        ("private", Cpp::Private),
        (
            "MOZ_NEEDS_MEMMOVABLE_MEMBERS",
            Cpp::MOZNEEDSMEMMOVABLEMEMBERS,
        ),
        (
            "variadic_parameter_declaration",
            Cpp::VariadicParameterDeclaration,
        ),
        ("MOZ_IS_CLASS_INIT", Cpp::MOZISCLASSINIT),
        ("MOZ_HEAP_ALLOCATOR", Cpp::MOZHEAPALLOCATOR),
        ("null", Cpp::Null),
        ("do_statement", Cpp::DoStatement),
        (
            "template_template_parameter_declaration",
            Cpp::TemplateTemplateParameterDeclaration,
        ),
        ("try_statement_repeat1", Cpp::TryStatementRepeat1),
        ("function_definition", Cpp::FunctionDefinition),
        ("switch", Cpp::Switch),
        (
            "template_argument_list_repeat1",
            Cpp::TemplateArgumentListRepeat1,
        ),
        ("MOZ_NORETURN", Cpp::MOZNORETURN),
        ("linkage_specification", Cpp::LinkageSpecification),
        ("MOZ_HAVE_NORETURN", Cpp::MOZHAVENORETURN),
        ("/=", Cpp::SLASHEQ),
        ("[[", Cpp::LBRACKLBRACK),
        (
            "MOZ_ONLY_USED_TO_AVOID_STATIC_CONSTRUCTORS",
            Cpp::MOZONLYUSEDTOAVOIDSTATICCONSTRUCTORS,
        ),
        ("__thiscall", Cpp::Thiscall),
        ("ms_unaligned_ptr_modifier", Cpp::MsUnalignedPtrModifier),
        ("L\\\"", Cpp::LDQUOTE),
        ("field_initializer", Cpp::FieldInitializer),
        ("MOZ_MUST_OVERRIDE", Cpp::MOZMUSTOVERRIDE),
        ("field_expression", Cpp::FieldExpression),
        ("type_definition_repeat2", Cpp::TypeDefinitionRepeat2),
        ("dependent_type", Cpp::DependentType),
        ("_type_declarator", Cpp::TypeDeclarator),
        ("parameter_list_repeat1", Cpp::ParameterListRepeat1),
        ("preproc_arg", Cpp::PreprocArg),
        ("alone_macro_call", Cpp::AloneMacroCall),
        ("MOZ_NON_TEMPORARY_CLASS", Cpp::MOZNONTEMPORARYCLASS),
        ("subscript_expression", Cpp::SubscriptExpression),
        ("MOZ_IMPLICIT", Cpp::MOZIMPLICIT),
        ("const", Cpp::Const),
        ("typedef", Cpp::Typedef),
        ("type_definition_repeat1", Cpp::TypeDefinitionRepeat1),
        ("comment", Cpp::Comment),
        ("signed", Cpp::Signed),
        (">>", Cpp::GTGT),
        (
            "MOZ_DECL_USE_GUARD_OBJECT_NOTIFIER",
            Cpp::MOZDECLUSEGUARDOBJECTNOTIFIER,
        ),
        ("catch", Cpp::Catch),
        ("final", Cpp::Final),
        ("field_declaration", Cpp::FieldDeclaration),
        ("try_statement", Cpp::TryStatement),
        ("break_statement", Cpp::BreakStatement),
        ("field_identifier", Cpp::FieldIdentifier),
        ("template_function", Cpp::TemplateFunction),
        ("short", Cpp::Short),
        ("JS_PUBLIC_API", Cpp::JSPUBLICAPI),
        ("#define", Cpp::HASHdefine),
        ("inline", Cpp::Inline),
        ("+", Cpp::PLUS),
        ("class", Cpp::Class),
        (
            "template_parameter_list_repeat1",
            Cpp::TemplateParameterListRepeat1,
        ),
        ("MOZ_MUST_USE_TYPE", Cpp::MOZMUSTUSETYPE),
        (
            "MOZ_PUSH_DISABLE_NONTRIVIAL_UNION_WARNINGS",
            Cpp::MOZPUSHDISABLENONTRIVIALUNIONWARNINGS,
        ),
        ("declaration_repeat1", Cpp::DeclarationRepeat1),
        ("using_declaration", Cpp::UsingDeclaration),
        ("preproc_ifdef", Cpp::PreprocIfdef),
        ("compound_statement", Cpp::CompoundStatement),
        ("MOZ_NEVER_INLINE", Cpp::MOZNEVERINLINE),
        ("preproc_params_repeat1", Cpp::PreprocParamsRepeat1),
        ("mutable", Cpp::Mutable),
        ("||", Cpp::PIPEPIPE),
        ("throw_statement", Cpp::ThrowStatement),
        ("type_qualifier", Cpp::TypeQualifier),
        ("default_method_clause", Cpp::DefaultMethodClause),
        ("do", Cpp::Do),
        ("MOZ_XPCOM_ABI", Cpp::MOZXPCOMABI),
        (
            "_field_declaration_list_item",
            Cpp::FieldDeclarationListItem,
        ),
        ("#elif", Cpp::HASHelif),
        ("MOZ_MUST_USE", Cpp::MOZMUSTUSE),
        ("_type_specifier", Cpp::TypeSpecifier),
        (
            "MOZ_NO_SANITIZE_SIGNED_OVERFLOW",
            Cpp::MOZNOSANITIZESIGNEDOVERFLOW,
        ),
        ("initializer_pair", Cpp::InitializerPair),
        ("condition_clause", Cpp::ConditionClause),
        ("protected", Cpp::Protected),
        (
            "explicit_function_specifier",
            Cpp::ExplicitFunctionSpecifier,
        ),
        ("PS_GET_LOCKLESS", Cpp::PSGETLOCKLESS),
        (":", Cpp::COLON),
        ("operator_name", Cpp::OperatorName),
        ("MOZ_RAII", Cpp::MOZRAII),
        ("union_specifier", Cpp::UnionSpecifier),
        ("concatenated_string", Cpp::ConcatenatedString),
        ("MOZ_HAVE_ASAN_BLACKLIST", Cpp::MOZHAVEASANBLACKLIST),
        ("MOZ_FORMAT_PRINTF", Cpp::MOZFORMATPRINTF),
        (
            "optional_parameter_declaration",
            Cpp::OptionalParameterDeclaration,
        ),
        ("preproc_if", Cpp::PreprocIf),
        ("while_statement", Cpp::WhileStatement),
        ("subscript_designator", Cpp::SubscriptDesignator),
        ("!", Cpp::BANG),
        ("trailing_return_type", Cpp::TrailingReturnType),
        ("throw_specifier", Cpp::ThrowSpecifier),
        (">>=", Cpp::GTGTEQ),
        (")", Cpp::RPAREN),
        ("QM_NOTEONLY_TRY_UNWRAP", Cpp::QMNOTEONLYTRYUNWRAP),
        ("MOZ_NEVER_INLINE_DEBUG", Cpp::MOZNEVERINLINEDEBUG),
        ("initializer_list_repeat1", Cpp::InitializerListRepeat1),
        (
            "optional_type_parameter_declaration",
            Cpp::OptionalTypeParameterDeclaration,
        ),
        ("|", Cpp::PIPE),
        (
            "variadic_type_parameter_declaration",
            Cpp::VariadicTypeParameterDeclaration,
        ),
        (
            "MOZ_MAY_CALL_AFTER_MUST_RETURN",
            Cpp::MOZMAYCALLAFTERMUSTRETURN,
        ),
        ("}", Cpp::RBRACE),
        ("throw_specifier_repeat1", Cpp::ThrowSpecifierRepeat1),
        ("MOZ_FALLTHROUGH", Cpp::MOZFALLTHROUGH),
        ("<", Cpp::LT),
        ("*=", Cpp::STAREQ),
        (
            "MOZ_NO_DANGLING_ON_TEMPORARIES",
            Cpp::MOZNODANGLINGONTEMPORARIES,
        ),
        ("MOZ_ASAN_BLACKLIST", Cpp::MOZASANBLACKLIST),
        ("__based", Cpp::Based),
        ("if_statement", Cpp::IfStatement),
        ("template_instantiation", Cpp::TemplateInstantiation),
        ("expression_statement", Cpp::ExpressionStatement),
        ("parenthesized_expression", Cpp::ParenthesizedExpression),
        (
            "MOZ_HAVE_SIGNED_OVERFLOW_SANITIZE_ATTR",
            Cpp::MOZHAVESIGNEDOVERFLOWSANITIZEATTR,
        ),
        ("MOZ_NON_MEMMOVABLE", Cpp::MOZNONMEMMOVABLE),
        ("while", Cpp::While),
        (
            "MOZ_NO_ADDREF_RELEASE_ON_RETURN",
            Cpp::MOZNOADDREFRELEASEONRETURN,
        ),
        ("MOZ_NONNULL_RETURN", Cpp::MOZNONNULLRETURN),
        ("assignment_expression", Cpp::AssignmentExpression),
        ("class_specifier", Cpp::ClassSpecifier),
        ("#else", Cpp::HASHelse),
        ("-=", Cpp::DASHEQ),
        ("continue", Cpp::Continue),
        ("system_lib_string", Cpp::SystemLibString),
    ],
};

impl From<&str> for Cpp {
    #[inline(always)]
    fn from(key: &str) -> Self {
        KEYS.get(key).unwrap().clone()
    }
}

impl From<u16> for Cpp {
    #[inline(always)]
    fn from(x: u16) -> Self {
        num::FromPrimitive::from_u16(x).unwrap_or(Self::Error)
    }
}

// Cpp == u16
impl PartialEq<u16> for Cpp {
    #[inline(always)]
    fn eq(&self, x: &u16) -> bool {
        *self == Cpp::from(*x)
    }
}

// u16 == Cpp
impl PartialEq<Cpp> for u16 {
    #[inline(always)]
    fn eq(&self, x: &Cpp) -> bool {
        *x == *self
    }
}
