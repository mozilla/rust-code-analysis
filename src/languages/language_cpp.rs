// Code generated; DO NOT EDIT.

#[derive(Clone, Debug, PartialEq, FromPrimitive)]
pub enum Cpp {
    End = 0,
    Identifier = 1,
    HASHinclude = 2,
    LF = 3,
    HASHdefine = 4,
    LPAREN = 5,
    DOTDOTDOT = 6,
    COMMA = 7,
    RPAREN = 8,
    HASHif = 9,
    HASHendif = 10,
    HASHifdef = 11,
    HASHifndef = 12,
    HASHelse = 13,
    HASHelif = 14,
    PreprocDirective = 15,
    PreprocArg = 16,
    LPAREN2 = 17,
    Defined = 18,
    BANG = 19,
    TILDE = 20,
    DASH = 21,
    PLUS = 22,
    STAR = 23,
    SLASH = 24,
    PERCENT = 25,
    PIPEPIPE = 26,
    AMPAMP = 27,
    PIPE = 28,
    CARET = 29,
    AMP = 30,
    EQEQ = 31,
    BANGEQ = 32,
    GT = 33,
    GTEQ = 34,
    LTEQ = 35,
    LT = 36,
    LTLT = 37,
    GTGT = 38,
    SEMI = 39,
    Typedef = 40,
    Extern = 41,
    Attribute2 = 42,
    Declspec = 43,
    Based = 44,
    Cdecl = 45,
    Clrcall = 46,
    Stdcall = 47,
    Fastcall = 48,
    Thiscall = 49,
    Vectorcall = 50,
    MsRestrictModifier = 51,
    MsUnsignedPtrModifier = 52,
    MsSignedPtrModifier = 53,
    Unaligned = 54,
    Unaligned2 = 55,
    LBRACE = 56,
    RBRACE = 57,
    LBRACK = 58,
    RBRACK = 59,
    EQ = 60,
    Static = 61,
    Register = 62,
    Inline = 63,
    Const = 64,
    Volatile = 65,
    Restrict = 66,
    Atomic = 67,
    Mutable = 68,
    Constexpr = 69,
    Signed = 70,
    Unsigned = 71,
    Long = 72,
    Short = 73,
    PrimitiveType = 74,
    Enum = 75,
    Class = 76,
    Struct = 77,
    Union = 78,
    COLON = 79,
    If = 80,
    Else = 81,
    Switch = 82,
    Case = 83,
    Default = 84,
    While = 85,
    Do = 86,
    For = 87,
    Return = 88,
    Break = 89,
    Continue = 90,
    Goto = 91,
    QMARK = 92,
    STAREQ = 93,
    SLASHEQ = 94,
    PERCENTEQ = 95,
    PLUSEQ = 96,
    DASHEQ = 97,
    LTLTEQ = 98,
    GTGTEQ = 99,
    AMPEQ = 100,
    CARETEQ = 101,
    PIPEEQ = 102,
    DASHDASH = 103,
    PLUSPLUS = 104,
    Sizeof = 105,
    DOT = 106,
    DASHGT = 107,
    NumberLiteral = 108,
    LSQUOTE = 109,
    USQUOTE = 110,
    USQUOTE2 = 111,
    U8SQUOTE = 112,
    SQUOTE = 113,
    CharLiteralToken1 = 114,
    LDQUOTE = 115,
    UDQUOTE = 116,
    UDQUOTE2 = 117,
    U8DQUOTE = 118,
    DQUOTE = 119,
    StringLiteralToken1 = 120,
    EscapeSequence = 121,
    SystemLibString = 122,
    True = 123,
    False = 124,
    Null = 125,
    Comment = 126,
    Decltype2 = 127,
    Final = 128,
    Override = 129,
    Virtual = 130,
    Explicit = 131,
    Public = 132,
    Private = 133,
    Protected = 134,
    Auto = 135,
    Typename = 136,
    Template = 137,
    GT2 = 138,
    COLONCOLON = 139,
    Operator = 140,
    Delete = 141,
    Friend = 142,
    Noexcept2 = 143,
    Throw = 144,
    Namespace = 145,
    Using = 146,
    StaticAssert = 147,
    Try = 148,
    Catch = 149,
    LBRACKLBRACK = 150,
    RBRACKRBRACK = 151,
    New = 152,
    OperatorName = 153,
    This = 154,
    Nullptr = 155,
    AloneMacro = 156,
    AloneMacroCallToken1 = 157,
    CACHETRYINSPECT = 158,
    CACHETRYUNWRAP = 159,
    FORWARD = 160,
    FORWARDSETATTRIBUTE = 161,
    IDBTRYINSPECT = 162,
    IDBTRYUNWRAP = 163,
    LSTRYINSPECT = 164,
    LSTRYUNWRAP = 165,
    SDBTRYINSPECT = 166,
    SDBTRYUNWRAP = 167,
    PSGET = 168,
    PSGETANDSET = 169,
    PSGETLOCKLESS = 170,
    QMTRYINSPECT = 171,
    QMNOTEONLYTRYUNWRAP = 172,
    QMTRYUNWRAP = 173,
    QMWARNONLYTRYUNWRAP = 174,
    MOZDECLUSEGUARDOBJECTNOTIFIER = 175,
    MOZALLOCATOR = 176,
    MOZALLOWTEMPORARY = 177,
    MOZALWAYSINLINE = 178,
    MOZALWAYSINLINEEVENDEBUG = 179,
    MOZASANBLACKLIST = 180,
    MOZCANRUNSCRIPT = 181,
    MOZCANRUNSCRIPTBOUNDARY = 182,
    MOZCANRUNSCRIPTFORDEFINITION = 183,
    MOZCOLD = 184,
    MOZFALLTHROUGH = 185,
    MOZFORMATPRINTF = 186,
    MOZHAVEANALYZERNORETURN = 187,
    MOZHAVEASANBLACKLIST = 188,
    MOZHAVENEVERINLINE = 189,
    MOZHAVENORETURN = 190,
    MOZHAVENORETURNPTR = 191,
    MOZHAVENOSANITIZEATTR = 192,
    MOZHAVESIGNEDOVERFLOWSANITIZEATTR = 193,
    MOZHAVEUNSIGNEDOVERFLOWSANITIZEATTR = 194,
    MOZHEAPALLOCATOR = 195,
    MOZHEAPCLASS = 196,
    MOZIMPLICIT = 197,
    MOZINHERITTYPEANNOTATIONSFROMTEMPLATEARGS = 198,
    MOZINITOUTSIDECTOR = 199,
    MOZISCLASSINIT = 200,
    MOZISREFPTR = 201,
    MOZISSMARTPTRTOREFCOUNTED = 202,
    MOZMAYBEUNUSED = 203,
    MOZMAYCALLAFTERMUSTRETURN = 204,
    MOZMUSTOVERRIDE = 205,
    MOZMUSTRETURNFROMCALLERIFTHISISARG = 206,
    MOZMUSTUSE = 207,
    MOZMUSTUSETYPE = 208,
    MOZNEEDSMEMMOVABLEMEMBERS = 209,
    MOZNEEDSMEMMOVABLETYPE = 210,
    MOZNEEDSNOVTABLETYPE = 211,
    MOZNEVERINLINE = 212,
    MOZNEVERINLINEDEBUG = 213,
    MOZNONHEAPCLASS = 214,
    MOZNONNULL = 215,
    MOZNONNULLRETURN = 216,
    MOZNONAUTOABLE = 217,
    MOZNONMEMMOVABLE = 218,
    MOZNONOWNINGREF = 219,
    MOZNONPARAM = 220,
    MOZNONTEMPORARYCLASS = 221,
    MOZNORETURN = 222,
    MOZNORETURNPTR = 223,
    MOZNOADDREFRELEASEONRETURN = 224,
    MOZNOARITHMETICEXPRINARGUMENT = 225,
    MOZNODANGLINGONTEMPORARIES = 226,
    MOZNOSANITIZESIGNEDOVERFLOW = 227,
    MOZNOSANITIZEUNSIGNEDOVERFLOW = 228,
    MOZONLYUSEDTOAVOIDSTATICCONSTRUCTORS = 229,
    MOZOWNINGREF = 230,
    MOZPOPDISABLENONTRIVIALUNIONWARNINGS = 231,
    MOZPRETENDNORETURNFORSTATICANALYSIS = 232,
    MOZPUSHDISABLENONTRIVIALUNIONWARNINGS = 233,
    MOZRAII = 234,
    MOZREQUIREDBASEMETHOD = 235,
    MOZSTACKCLASS = 236,
    MOZSTATICCLASS = 237,
    MOZSTATICLOCALCLASS = 238,
    MOZTEMPORARYCLASS = 239,
    MOZTRIVIALCTORDTOR = 240,
    MOZTSANBLACKLIST = 241,
    MOZUNSAFEREF = 242,
    MOZXPCOMABI = 243,
    JSPUBLICAPI = 244,
    RawStringLiteral = 245,
    TranslationUnit = 246,
    PreprocInclude = 247,
    PreprocDef = 248,
    PreprocFunctionDef = 249,
    PreprocParams = 250,
    PreprocCall = 251,
    PreprocIf = 252,
    PreprocIfdef = 253,
    PreprocElse = 254,
    PreprocElif = 255,
    PreprocIf2 = 256,
    PreprocIfdef2 = 257,
    PreprocElse2 = 258,
    PreprocElif2 = 259,
    PreprocExpression = 260,
    ParenthesizedExpression = 261,
    PreprocDefined = 262,
    UnaryExpression = 263,
    CallExpression = 264,
    ArgumentList = 265,
    BinaryExpression = 266,
    FunctionDefinition = 267,
    Declaration = 268,
    TypeDefinition = 269,
    DeclarationSpecifiers = 270,
    LinkageSpecification = 271,
    AttributeSpecifier = 272,
    MsDeclspecModifier = 273,
    MsBasedModifier = 274,
    MsCallModifier = 275,
    MsUnalignedPtrModifier = 276,
    MsPointerModifier = 277,
    DeclarationList = 278,
    Declarator = 279,
    FieldDeclarator = 280,
    TypeDeclarator = 281,
    AbstractDeclarator = 282,
    ParenthesizedDeclarator = 283,
    ParenthesizedDeclarator2 = 284,
    ParenthesizedDeclarator3 = 285,
    AbstractParenthesizedDeclarator = 286,
    PointerDeclarator = 287,
    PointerDeclarator2 = 288,
    PointerDeclarator3 = 289,
    AbstractPointerDeclarator = 290,
    FunctionDeclarator = 291,
    FunctionDeclarator2 = 292,
    FunctionDeclarator3 = 293,
    AbstractFunctionDeclarator = 294,
    ArrayDeclarator = 295,
    ArrayDeclarator2 = 296,
    ArrayDeclarator3 = 297,
    AbstractArrayDeclarator = 298,
    InitDeclarator = 299,
    CompoundStatement = 300,
    StorageClassSpecifier = 301,
    TypeQualifier = 302,
    TypeSpecifier = 303,
    SizedTypeSpecifier = 304,
    EnumSpecifier = 305,
    EnumeratorList = 306,
    StructSpecifier = 307,
    UnionSpecifier = 308,
    FieldDeclarationList = 309,
    FieldDeclarationListItem = 310,
    FieldDeclaration = 311,
    BitfieldClause = 312,
    Enumerator = 313,
    ParameterList = 314,
    ParameterDeclaration = 315,
    LabeledStatement = 316,
    ExpressionStatement = 317,
    IfStatement = 318,
    SwitchStatement = 319,
    CaseStatement = 320,
    WhileStatement = 321,
    DoStatement = 322,
    ForStatement = 323,
    ReturnStatement = 324,
    BreakStatement = 325,
    ContinueStatement = 326,
    GotoStatement = 327,
    Expression = 328,
    CommaExpression = 329,
    ConditionalExpression = 330,
    AssignmentExpression = 331,
    PointerExpression = 332,
    UnaryExpression2 = 333,
    BinaryExpression2 = 334,
    UpdateExpression = 335,
    CastExpression = 336,
    TypeDescriptor = 337,
    SizeofExpression = 338,
    SubscriptExpression = 339,
    CallExpression2 = 340,
    ArgumentList2 = 341,
    FieldExpression = 342,
    CompoundLiteralExpression = 343,
    ParenthesizedExpression2 = 344,
    InitializerList = 345,
    InitializerPair = 346,
    SubscriptDesignator = 347,
    FieldDesignator = 348,
    CharLiteral = 349,
    ConcatenatedString = 350,
    StringLiteral = 351,
    EmptyDeclaration = 352,
    Decltype = 353,
    ClassSpecifier = 354,
    ClassName = 355,
    VirtualSpecifier = 356,
    VirtualFunctionSpecifier = 357,
    ExplicitFunctionSpecifier = 358,
    BaseClassClause = 359,
    EnumBaseClause = 360,
    DependentType = 361,
    TemplateDeclaration = 362,
    TemplateInstantiation = 363,
    TemplateParameterList = 364,
    TypeParameterDeclaration = 365,
    VariadicTypeParameterDeclaration = 366,
    OptionalTypeParameterDeclaration = 367,
    TemplateTemplateParameterDeclaration = 368,
    OptionalParameterDeclaration = 369,
    VariadicParameterDeclaration = 370,
    VariadicDeclarator = 371,
    ReferenceDeclarator = 372,
    OperatorCast = 373,
    FieldInitializerList = 374,
    FieldInitializer = 375,
    FunctionDefinition2 = 376,
    ConstructorSpecifiers = 377,
    FunctionDefinition3 = 378,
    Declaration2 = 379,
    FunctionDefinition4 = 380,
    Declaration3 = 381,
    DefaultMethodClause = 382,
    DeleteMethodClause = 383,
    FriendDeclaration = 384,
    AccessSpecifier = 385,
    ReferenceDeclarator2 = 386,
    ReferenceDeclarator3 = 387,
    AbstractReferenceDeclarator = 388,
    StructuredBindingDeclarator = 389,
    TrailingReturnType = 390,
    Noexcept = 391,
    ThrowSpecifier = 392,
    TemplateType = 393,
    TemplateMethod = 394,
    TemplateFunction = 395,
    TemplateArgumentList = 396,
    NamespaceDefinition = 397,
    UsingDeclaration = 398,
    AliasDeclaration = 399,
    StaticAssertDeclaration = 400,
    ConditionClause = 401,
    Declaration4 = 402,
    ForRangeLoop = 403,
    ThrowStatement = 404,
    TryStatement = 405,
    CatchClause = 406,
    Attribute = 407,
    NewExpression = 408,
    NewDeclarator = 409,
    DeleteExpression = 410,
    LambdaExpression = 411,
    LambdaCaptureSpecifier = 412,
    LambdaDefaultCapture = 413,
    ParameterPackExpansion = 414,
    ParameterPackExpansion2 = 415,
    DestructorName = 416,
    ScopedFieldIdentifier = 417,
    ScopedIdentifier = 418,
    ScopedTypeIdentifier = 419,
    ScopedNamespaceIdentifier = 420,
    AloneMacroCall = 421,
    CallMacroWithDeclFirstArg = 422,
    MacroStatement = 423,
    MacroAnnotation = 424,
    TranslationUnitRepeat1 = 425,
    PreprocParamsRepeat1 = 426,
    PreprocIfInFieldDeclarationListRepeat1 = 427,
    PreprocArgumentListRepeat1 = 428,
    FunctionDefinitionRepeat1 = 429,
    DeclarationRepeat1 = 430,
    TypeDefinitionRepeat1 = 431,
    TypeDefinitionRepeat2 = 432,
    DeclarationSpecifiersRepeat1 = 433,
    PointerDeclaratorRepeat1 = 434,
    FunctionDeclaratorRepeat1 = 435,
    FunctionDeclaratorRepeat2 = 436,
    AbstractFunctionDeclaratorRepeat1 = 437,
    SizedTypeSpecifierRepeat1 = 438,
    EnumeratorListRepeat1 = 439,
    FieldDeclarationRepeat1 = 440,
    ParameterListRepeat1 = 441,
    CaseStatementRepeat1 = 442,
    ArgumentListRepeat1 = 443,
    InitializerListRepeat1 = 444,
    InitializerPairRepeat1 = 445,
    ConcatenatedStringRepeat1 = 446,
    StringLiteralRepeat1 = 447,
    ClassSpecifierRepeat1 = 448,
    BaseClassClauseRepeat1 = 449,
    TemplateParameterListRepeat1 = 450,
    FieldInitializerListRepeat1 = 451,
    StructuredBindingDeclaratorRepeat1 = 452,
    ThrowSpecifierRepeat1 = 453,
    TemplateArgumentListRepeat1 = 454,
    TryStatementRepeat1 = 455,
    AttributeRepeat1 = 456,
    AloneMacroCallRepeat1 = 457,
    FieldIdentifier = 458,
    NamespaceIdentifier = 459,
    StatementIdentifier = 460,
    TypeIdentifier = 461,
    Error = 462,
}

impl std::fmt::Display for Cpp {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        write!(f, "{:?}", self)
    }
}

#[allow(clippy::unreadable_literal)]
static KEYS: phf::Map<&'static str, &'static str> = ::phf::Map {
    key: 3213172566270843353,
    disps: ::phf::Slice::Static(&[
        (0, 5),
        (0, 86),
        (1, 108),
        (0, 14),
        (1, 31),
        (0, 4),
        (0, 0),
        (0, 11),
        (0, 56),
        (0, 93),
        (0, 2),
        (0, 93),
        (0, 457),
        (0, 20),
        (0, 13),
        (0, 5),
        (1, 0),
        (0, 318),
        (0, 0),
        (0, 25),
        (0, 61),
        (0, 23),
        (0, 52),
        (0, 84),
        (0, 225),
        (0, 214),
        (0, 20),
        (0, 68),
        (0, 329),
        (1, 51),
        (0, 264),
        (0, 8),
        (0, 316),
        (0, 26),
        (0, 0),
        (0, 0),
        (0, 25),
        (0, 94),
        (3, 140),
        (4, 254),
        (0, 89),
        (16, 192),
        (0, 143),
        (7, 82),
        (0, 40),
        (0, 1),
        (0, 146),
        (0, 20),
        (0, 46),
        (0, 3),
        (14, 454),
        (0, 2),
        (0, 4),
        (0, 112),
        (0, 97),
        (0, 135),
        (0, 2),
        (0, 13),
        (0, 36),
        (2, 212),
        (13, 135),
        (1, 31),
        (0, 7),
        (2, 6),
        (0, 25),
        (0, 61),
        (3, 382),
        (2, 31),
        (0, 132),
        (0, 69),
        (29, 317),
        (1, 176),
        (7, 432),
        (0, 2),
        (1, 107),
        (0, 275),
        (0, 2),
        (0, 48),
        (0, 2),
        (6, 279),
        (2, 152),
        (8, 330),
        (0, 235),
        (0, 335),
        (25, 114),
        (0, 23),
        (6, 446),
        (18, 328),
        (1, 62),
        (8, 76),
        (8, 411),
        (0, 444),
        (0, 1),
    ]),
    entries: ::phf::Slice::Static(&[
        ("Cdecl", "__cdecl"),
        ("MOZNEVERINLINE", "MOZ_NEVER_INLINE"),
        ("PreprocElse2", "preproc_else"),
        ("AliasDeclaration", "alias_declaration"),
        ("AMPEQ", "&="),
        ("FunctionDefinition2", "function_definition"),
        ("ParenthesizedDeclarator3", "parenthesized_declarator"),
        ("LBRACE", "{"),
        ("MOZREQUIREDBASEMETHOD", "MOZ_REQUIRED_BASE_METHOD"),
        ("QMTRYUNWRAP", "QM_TRY_UNWRAP"),
        ("TypeDefinitionRepeat2", "type_definition_repeat2"),
        (
            "PreprocArgumentListRepeat1",
            "preproc_argument_list_repeat1",
        ),
        ("BaseClassClause", "base_class_clause"),
        ("CallExpression", "call_expression"),
        ("MOZSTACKCLASS", "MOZ_STACK_CLASS"),
        ("MOZTEMPORARYCLASS", "MOZ_TEMPORARY_CLASS"),
        ("InitializerPair", "initializer_pair"),
        ("ReturnStatement", "return_statement"),
        ("NumberLiteral", "number_literal"),
        ("MOZNONOWNINGREF", "MOZ_NON_OWNING_REF"),
        ("ParameterPackExpansion", "parameter_pack_expansion"),
        (
            "VariadicParameterDeclaration",
            "variadic_parameter_declaration",
        ),
        ("ThrowSpecifierRepeat1", "throw_specifier_repeat1"),
        ("HASHelse", "#else"),
        ("Declaration3", "declaration"),
        ("MOZCANRUNSCRIPTBOUNDARY", "MOZ_CAN_RUN_SCRIPT_BOUNDARY"),
        ("MacroStatement", "macro_statement"),
        ("ArgumentList", "argument_list"),
        ("PLUSEQ", "+="),
        ("Stdcall", "__stdcall"),
        ("ConstructorSpecifiers", "_constructor_specifiers"),
        ("ClassSpecifier", "class_specifier"),
        (
            "MOZHAVESIGNEDOVERFLOWSANITIZEATTR",
            "MOZ_HAVE_SIGNED_OVERFLOW_SANITIZE_ATTR",
        ),
        ("Signed", "signed"),
        ("Extern", "extern"),
        ("PointerDeclarator2", "pointer_declarator"),
        ("MOZMAYBEUNUSED", "MOZ_MAYBE_UNUSED"),
        ("IfStatement", "if_statement"),
        ("InitializerPairRepeat1", "initializer_pair_repeat1"),
        ("STAREQ", "*="),
        (
            "MOZINHERITTYPEANNOTATIONSFROMTEMPLATEARGS",
            "MOZ_INHERIT_TYPE_ANNOTATIONS_FROM_TEMPLATE_ARGS",
        ),
        ("Unsigned", "unsigned"),
        ("DependentType", "dependent_type"),
        ("MOZISCLASSINIT", "MOZ_IS_CLASS_INIT"),
        ("PSGETANDSET", "PS_GET_AND_SET"),
        ("LBRACKLBRACK", "[["),
        ("False", "false"),
        ("MOZISSMARTPTRTOREFCOUNTED", "MOZ_IS_SMARTPTR_TO_REFCOUNTED"),
        ("ContinueStatement", "continue_statement"),
        ("ClassName", "_class_name"),
        ("MOZNONTEMPORARYCLASS", "MOZ_NON_TEMPORARY_CLASS"),
        ("FORWARD", "FORWARD"),
        ("OperatorCast", "operator_cast"),
        ("Friend", "friend"),
        ("ForRangeLoop", "for_range_loop"),
        ("UpdateExpression", "update_expression"),
        ("StaticAssert", "static_assert"),
        ("Thiscall", "__thiscall"),
        ("Unaligned", "_unaligned"),
        (
            "CallMacroWithDeclFirstArg",
            "_call_macro_with_decl_first_arg",
        ),
        ("ArrayDeclarator2", "array_declarator"),
        ("ParenthesizedDeclarator", "parenthesized_declarator"),
        ("AbstractFunctionDeclarator", "abstract_function_declarator"),
        ("PreprocInclude", "preproc_include"),
        ("BitfieldClause", "bitfield_clause"),
        ("PreprocDirective", "preproc_directive"),
        ("Virtual", "virtual"),
        ("ReferenceDeclarator", "reference_declarator"),
        ("Private", "private"),
        (
            "MOZNOSANITIZESIGNEDOVERFLOW",
            "MOZ_NO_SANITIZE_SIGNED_OVERFLOW",
        ),
        ("TranslationUnitRepeat1", "translation_unit_repeat1"),
        ("End", "end"),
        ("AMPAMP", "&&"),
        ("LTLT", "<<"),
        ("VirtualFunctionSpecifier", "virtual_function_specifier"),
        ("MOZASANBLACKLIST", "MOZ_ASAN_BLACKLIST"),
        ("Constexpr", "constexpr"),
        ("CaseStatementRepeat1", "case_statement_repeat1"),
        ("MOZNEEDSMEMMOVABLETYPE", "MOZ_NEEDS_MEMMOVABLE_TYPE"),
        ("PreprocIf2", "preproc_if"),
        ("TypeParameterDeclaration", "type_parameter_declaration"),
        ("TranslationUnit", "translation_unit"),
        ("MOZMUSTUSETYPE", "MOZ_MUST_USE_TYPE"),
        ("DOTDOTDOT", "..."),
        ("LPAREN2", "("),
        ("DoStatement", "do_statement"),
        ("Declaration4", "declaration"),
        ("AMP", "&"),
        (
            "AbstractFunctionDeclaratorRepeat1",
            "abstract_function_declarator_repeat1",
        ),
        ("Catch", "catch"),
        ("CallExpression2", "call_expression"),
        ("Delete", "delete"),
        ("USQUOTE", "u'"),
        ("Break", "break"),
        ("MOZTRIVIALCTORDTOR", "MOZ_TRIVIAL_CTOR_DTOR"),
        ("Struct", "struct"),
        ("BreakStatement", "break_statement"),
        ("StringLiteral", "string_literal"),
        ("FieldDeclarationList", "field_declaration_list"),
        ("TemplateFunction", "template_function"),
        ("PreprocDef", "preproc_def"),
        ("FORWARDSETATTRIBUTE", "FORWARD_SET_ATTRIBUTE"),
        (
            "StructuredBindingDeclarator",
            "structured_binding_declarator",
        ),
        ("Expression", "_expression"),
        ("MOZHAVENOSANITIZEATTR", "MOZ_HAVE_NO_SANITIZE_ATTR"),
        ("CaseStatement", "case_statement"),
        ("Auto", "auto"),
        ("MOZHEAPCLASS", "MOZ_HEAP_CLASS"),
        ("MOZUNSAFEREF", "MOZ_UNSAFE_REF"),
        ("PreprocParamsRepeat1", "preproc_params_repeat1"),
        ("GTEQ", ">="),
        ("SDBTRYINSPECT", "SDB_TRY_INSPECT"),
        ("Error", "ERROR"),
        ("Protected", "protected"),
        ("SDBTRYUNWRAP", "SDB_TRY_UNWRAP"),
        ("UDQUOTE", "u\""),
        ("StorageClassSpecifier", "storage_class_specifier"),
        ("LabeledStatement", "labeled_statement"),
        ("InitializerList", "initializer_list"),
        ("DQUOTE", "\""),
        ("MOZALWAYSINLINEEVENDEBUG", "MOZ_ALWAYS_INLINE_EVEN_DEBUG"),
        ("MOZHAVEANALYZERNORETURN", "MOZ_HAVE_ANALYZER_NORETURN"),
        ("USQUOTE2", "U'"),
        ("MsCallModifier", "ms_call_modifier"),
        ("For", "for"),
        ("UnionSpecifier", "union_specifier"),
        ("Declspec", "__declspec"),
        ("TypeDescriptor", "type_descriptor"),
        ("DestructorName", "destructor_name"),
        ("RBRACE", "}"),
        ("MsUnalignedPtrModifier", "ms_unaligned_ptr_modifier"),
        ("ParameterList", "parameter_list"),
        ("MsUnsignedPtrModifier", "ms_unsigned_ptr_modifier"),
        ("Typename", "typename"),
        ("MsSignedPtrModifier", "ms_signed_ptr_modifier"),
        (
            "VariadicTypeParameterDeclaration",
            "variadic_type_parameter_declaration",
        ),
        ("TypeQualifier", "type_qualifier"),
        ("SizedTypeSpecifierRepeat1", "sized_type_specifier_repeat1"),
        ("ScopedNamespaceIdentifier", "scoped_namespace_identifier"),
        ("ScopedTypeIdentifier", "scoped_type_identifier"),
        ("EnumeratorListRepeat1", "enumerator_list_repeat1"),
        ("SEMI", ";"),
        ("Decltype2", "decltype"),
        ("SystemLibString", "system_lib_string"),
        ("FieldDeclarationListItem", "_field_declaration_list_item"),
        ("AccessSpecifier", "access_specifier"),
        ("PSGETLOCKLESS", "PS_GET_LOCKLESS"),
        ("LSTRYUNWRAP", "LS_TRY_UNWRAP"),
        ("CACHETRYINSPECT", "CACHE_TRY_INSPECT"),
        ("LBRACK", "["),
        ("FieldIdentifier", "field_identifier"),
        ("Try", "try"),
        ("Namespace", "namespace"),
        ("TemplateParameterList", "template_parameter_list"),
        ("PointerDeclaratorRepeat1", "pointer_declarator_repeat1"),
        ("EscapeSequence", "escape_sequence"),
        ("MOZNEEDSNOVTABLETYPE", "MOZ_NEEDS_NO_VTABLE_TYPE"),
        ("While", "while"),
        ("Vectorcall", "__vectorcall"),
        ("MOZIMPLICIT", "MOZ_IMPLICIT"),
        (
            "StructuredBindingDeclaratorRepeat1",
            "structured_binding_declarator_repeat1",
        ),
        ("ReferenceDeclarator3", "reference_declarator"),
        ("StringLiteralToken1", "string_literal_token1"),
        ("ConcatenatedString", "concatenated_string"),
        ("MOZHAVENORETURN", "MOZ_HAVE_NORETURN"),
        ("ForStatement", "for_statement"),
        ("Register", "register"),
        (
            "DeclarationSpecifiersRepeat1",
            "_declaration_specifiers_repeat1",
        ),
        ("COLON", ":"),
        ("Based", "__based"),
        ("Clrcall", "__clrcall"),
        ("NamespaceIdentifier", "namespace_identifier"),
        (
            "MOZNODANGLINGONTEMPORARIES",
            "MOZ_NO_DANGLING_ON_TEMPORARIES",
        ),
        ("Else", "else"),
        ("DASHEQ", "-="),
        ("EnumSpecifier", "enum_specifier"),
        ("Declaration", "declaration"),
        ("BinaryExpression2", "binary_expression"),
        ("ParenthesizedExpression", "parenthesized_expression"),
        ("TryStatementRepeat1", "try_statement_repeat1"),
        ("HASHif", "#if"),
        (
            "MOZPRETENDNORETURNFORSTATICANALYSIS",
            "MOZ_PRETEND_NORETURN_FOR_STATIC_ANALYSIS",
        ),
        ("TemplateArgumentList", "template_argument_list"),
        ("LinkageSpecification", "linkage_specification"),
        ("TemplateType", "template_type"),
        ("UnaryExpression", "unary_expression"),
        ("IDBTRYUNWRAP", "IDB_TRY_UNWRAP"),
        ("MsRestrictModifier", "ms_restrict_modifier"),
        ("MOZNEVERINLINEDEBUG", "MOZ_NEVER_INLINE_DEBUG"),
        ("FunctionDeclaratorRepeat2", "function_declarator_repeat2"),
        ("LPAREN", "("),
        ("InitializerListRepeat1", "initializer_list_repeat1"),
        ("ClassSpecifierRepeat1", "class_specifier_repeat1"),
        ("CastExpression", "cast_expression"),
        ("Atomic", "_Atomic"),
        ("MOZHAVEASANBLACKLIST", "MOZ_HAVE_ASAN_BLACKLIST"),
        ("PreprocDefined", "preproc_defined"),
        ("Comment", "comment"),
        ("PreprocElif", "preproc_elif"),
        ("PIPEPIPE", "||"),
        ("MOZFORMATPRINTF", "MOZ_FORMAT_PRINTF"),
        ("Nullptr", "nullptr"),
        ("EnumBaseClause", "_enum_base_clause"),
        ("DeclarationRepeat1", "declaration_repeat1"),
        ("Attribute", "attribute"),
        (
            "MOZPOPDISABLENONTRIVIALUNIONWARNINGS",
            "MOZ_POP_DISABLE_NONTRIVIAL_UNION_WARNINGS",
        ),
        ("AloneMacroCallToken1", "alone_macro_call_token1"),
        ("RBRACKRBRACK", "]]"),
        (
            "MOZDECLUSEGUARDOBJECTNOTIFIER",
            "MOZ_DECL_USE_GUARD_OBJECT_NOTIFIER",
        ),
        ("CACHETRYUNWRAP", "CACHE_TRY_UNWRAP"),
        ("LambdaCaptureSpecifier", "lambda_capture_specifier"),
        ("Unaligned2", "__unaligned"),
        ("StructSpecifier", "struct_specifier"),
        ("PrimitiveType", "primitive_type"),
        ("STAR", "*"),
        ("MOZMUSTOVERRIDE", "MOZ_MUST_OVERRIDE"),
        ("MOZALLOCATOR", "MOZ_ALLOCATOR"),
        (
            "MOZMAYCALLAFTERMUSTRETURN",
            "MOZ_MAY_CALL_AFTER_MUST_RETURN",
        ),
        ("MOZCOLD", "MOZ_COLD"),
        ("QMNOTEONLYTRYUNWRAP", "QM_NOTEONLY_TRY_UNWRAP"),
        ("NamespaceDefinition", "namespace_definition"),
        ("AbstractPointerDeclarator", "abstract_pointer_declarator"),
        ("Template", "template"),
        ("TypeDeclarator", "_type_declarator"),
        ("ThrowSpecifier", "throw_specifier"),
        ("Defined", "defined"),
        ("This", "this"),
        ("SubscriptExpression", "subscript_expression"),
        ("FunctionDefinition3", "function_definition"),
        ("PointerDeclarator", "pointer_declarator"),
        ("TypeDefinition", "type_definition"),
        ("MsPointerModifier", "ms_pointer_modifier"),
        ("FunctionDeclarator", "function_declarator"),
        ("CompoundStatement", "compound_statement"),
        ("Enum", "enum"),
        ("MOZNONNULL", "MOZ_NONNULL"),
        ("GT2", ">"),
        ("PointerDeclarator3", "pointer_declarator"),
        ("HASHinclude", "#include"),
        ("TypeIdentifier", "type_identifier"),
        ("CARET", "^"),
        ("ThrowStatement", "throw_statement"),
        ("BinaryExpression", "binary_expression"),
        ("AloneMacroCallRepeat1", "alone_macro_call_repeat1"),
        ("Class", "class"),
        ("MOZNEEDSMEMMOVABLEMEMBERS", "MOZ_NEEDS_MEMMOVABLE_MEMBERS"),
        (
            "PreprocIfInFieldDeclarationListRepeat1",
            "preproc_if_in_field_declaration_list_repeat1",
        ),
        ("LF", "\n"),
        ("Long", "long"),
        ("Typedef", "typedef"),
        (
            "TemplateArgumentListRepeat1",
            "template_argument_list_repeat1",
        ),
        ("FunctionDeclarator3", "function_declarator"),
        ("SwitchStatement", "switch_statement"),
        ("ConditionClause", "condition_clause"),
        ("AbstractDeclarator", "_abstract_declarator"),
        ("ParameterDeclaration", "parameter_declaration"),
        ("DeclarationSpecifiers", "_declaration_specifiers"),
        ("TemplateDeclaration", "template_declaration"),
        ("ParameterPackExpansion2", "parameter_pack_expansion"),
        ("MsBasedModifier", "ms_based_modifier"),
        ("MOZOWNINGREF", "MOZ_OWNING_REF"),
        (
            "MOZMUSTRETURNFROMCALLERIFTHISISARG",
            "MOZ_MUST_RETURN_FROM_CALLER_IF_THIS_IS_ARG",
        ),
        ("ArgumentList2", "argument_list"),
        (
            "MOZNOSANITIZEUNSIGNEDOVERFLOW",
            "MOZ_NO_SANITIZE_UNSIGNED_OVERFLOW",
        ),
        ("PreprocParams", "preproc_params"),
        ("Case", "case"),
        ("QMWARNONLYTRYUNWRAP", "QM_WARNONLY_TRY_UNWRAP"),
        ("New", "new"),
        ("LSTRYINSPECT", "LS_TRY_INSPECT"),
        ("True", "true"),
        ("FieldDeclaration", "field_declaration"),
        ("PreprocIfdef", "preproc_ifdef"),
        ("ParenthesizedDeclarator2", "parenthesized_declarator"),
        ("AbstractArrayDeclarator", "abstract_array_declarator"),
        ("EmptyDeclaration", "_empty_declaration"),
        ("MOZFALLTHROUGH", "MOZ_FALLTHROUGH"),
        ("GotoStatement", "goto_statement"),
        ("HASHdefine", "#define"),
        ("VariadicDeclarator", "variadic_declarator"),
        ("EQ", "="),
        (
            "TemplateTemplateParameterDeclaration",
            "template_template_parameter_declaration",
        ),
        ("CARETEQ", "^="),
        ("MOZNORETURN", "MOZ_NORETURN"),
        ("DASHGT", "->"),
        ("TemplateMethod", "template_method"),
        ("LTLTEQ", "<<="),
        ("FieldInitializer", "field_initializer"),
        ("HASHendif", "#endif"),
        ("MOZTSANBLACKLIST", "MOZ_TSAN_BLACKLIST"),
        ("CharLiteral", "char_literal"),
        ("PreprocIfdef2", "preproc_ifdef"),
        ("Return", "return"),
        ("Operator", "operator"),
        ("Restrict", "restrict"),
        ("SQUOTE", "'"),
        ("PreprocFunctionDef", "preproc_function_def"),
        ("Inline", "inline"),
        ("PreprocExpression", "_preproc_expression"),
        ("LTEQ", "<="),
        ("Static", "static"),
        ("MsDeclspecModifier", "ms_declspec_modifier"),
        ("Goto", "goto"),
        ("StaticAssertDeclaration", "static_assert_declaration"),
        ("Explicit", "explicit"),
        ("U8DQUOTE", "u8\""),
        ("Noexcept2", "noexcept"),
        ("Continue", "continue"),
        ("Identifier", "identifier"),
        ("TypeSpecifier", "_type_specifier"),
        ("EQEQ", "=="),
        ("FunctionDefinition", "function_definition"),
        ("RPAREN", ")"),
        ("ParameterListRepeat1", "parameter_list_repeat1"),
        ("ScopedFieldIdentifier", "scoped_field_identifier"),
        ("Declarator", "_declarator"),
        ("IDBTRYINSPECT", "IDB_TRY_INSPECT"),
        ("DASH", "-"),
        ("FriendDeclaration", "friend_declaration"),
        ("Declaration2", "declaration"),
        ("BANG", "!"),
        ("ReferenceDeclarator2", "reference_declarator"),
        ("ExplicitFunctionSpecifier", "explicit_function_specifier"),
        ("Default", "default"),
        ("FieldInitializerList", "field_initializer_list"),
        ("CompoundLiteralExpression", "compound_literal_expression"),
        ("Decltype", "decltype"),
        ("PreprocElif2", "preproc_elif"),
        ("HASHelif", "#elif"),
        ("ArrayDeclarator", "array_declarator"),
        ("Override", "override"),
        ("FieldExpression", "field_expression"),
        ("PLUSPLUS", "++"),
        ("FunctionDeclarator2", "function_declarator"),
        (
            "AbstractReferenceDeclarator",
            "abstract_reference_declarator",
        ),
        ("COLONCOLON", "::"),
        (
            "MOZHAVEUNSIGNEDOVERFLOWSANITIZEATTR",
            "MOZ_HAVE_UNSIGNED_OVERFLOW_SANITIZE_ATTR",
        ),
        ("LambdaExpression", "lambda_expression"),
        ("PSGET", "PS_GET"),
        ("Throw", "throw"),
        ("EnumeratorList", "enumerator_list"),
        ("PreprocArg", "preproc_arg"),
        ("AttributeRepeat1", "attribute_repeat1"),
        ("Mutable", "mutable"),
        (
            "AbstractParenthesizedDeclarator",
            "abstract_parenthesized_declarator",
        ),
        ("Union", "union"),
        ("ConcatenatedStringRepeat1", "concatenated_string_repeat1"),
        ("TrailingReturnType", "trailing_return_type"),
        ("Enumerator", "enumerator"),
        ("StringLiteralRepeat1", "string_literal_repeat1"),
        ("FieldDesignator", "field_designator"),
        ("NewExpression", "new_expression"),
        ("HASHifdef", "#ifdef"),
        ("MOZHAVENEVERINLINE", "MOZ_HAVE_NEVER_INLINE"),
        ("PERCENT", "%"),
        ("CommaExpression", "comma_expression"),
        ("CharLiteralToken1", "char_literal_token1"),
        ("MOZHAVENORETURNPTR", "MOZ_HAVE_NORETURN_PTR"),
        ("MOZNORETURNPTR", "MOZ_NORETURN_PTR"),
        ("MOZNONHEAPCLASS", "MOZ_NONHEAP_CLASS"),
        ("COMMA", ","),
        ("MOZCANRUNSCRIPT", "MOZ_CAN_RUN_SCRIPT"),
        ("UDQUOTE2", "U\""),
        ("MOZSTATICLOCALCLASS", "MOZ_STATIC_LOCAL_CLASS"),
        ("DASHDASH", "--"),
        ("FunctionDefinition4", "function_definition"),
        ("LT", "<"),
        ("Using", "using"),
        (
            "OptionalTypeParameterDeclaration",
            "optional_type_parameter_declaration",
        ),
        (
            "MOZNOADDREFRELEASEONRETURN",
            "MOZ_NO_ADDREF_RELEASE_ON_RETURN",
        ),
        ("GTGTEQ", ">>="),
        ("LDQUOTE", "L\""),
        ("TemplateInstantiation", "template_instantiation"),
        ("Const", "const"),
        ("ExpressionStatement", "expression_statement"),
        ("MOZNONMEMMOVABLE", "MOZ_NON_MEMMOVABLE"),
        ("PIPEEQ", "|="),
        (
            "MOZNOARITHMETICEXPRINARGUMENT",
            "MOZ_NO_ARITHMETIC_EXPR_IN_ARGUMENT",
        ),
        ("ArgumentListRepeat1", "argument_list_repeat1"),
        ("ParenthesizedExpression2", "parenthesized_expression"),
        ("GTGT", ">>"),
        ("VirtualSpecifier", "virtual_specifier"),
        ("FunctionDefinitionRepeat1", "function_definition_repeat1"),
        ("WhileStatement", "while_statement"),
        ("AttributeSpecifier", "attribute_specifier"),
        ("AloneMacro", "alone_macro"),
        ("HASHifndef", "#ifndef"),
        (
            "FieldInitializerListRepeat1",
            "field_initializer_list_repeat1",
        ),
        ("Short", "short"),
        ("ScopedIdentifier", "scoped_identifier"),
        ("AloneMacroCall", "alone_macro_call"),
        ("Public", "public"),
        ("PointerExpression", "pointer_expression"),
        ("Volatile", "volatile"),
        ("Noexcept", "noexcept"),
        ("GT", ">"),
        ("MOZRAII", "MOZ_RAII"),
        ("MOZALWAYSINLINE", "MOZ_ALWAYS_INLINE"),
        ("InitDeclarator", "init_declarator"),
        ("MOZNONAUTOABLE", "MOZ_NON_AUTOABLE"),
        ("SizedTypeSpecifier", "sized_type_specifier"),
        ("Do", "do"),
        ("MOZMUSTUSE", "MOZ_MUST_USE"),
        (
            "TemplateParameterListRepeat1",
            "template_parameter_list_repeat1",
        ),
        ("FunctionDeclaratorRepeat1", "function_declarator_repeat1"),
        ("Sizeof", "sizeof"),
        ("MOZALLOWTEMPORARY", "MOZ_ALLOW_TEMPORARY"),
        ("RawStringLiteral", "raw_string_literal"),
        ("OperatorName", "operator_name"),
        ("AssignmentExpression", "assignment_expression"),
        ("StatementIdentifier", "statement_identifier"),
        ("MOZXPCOMABI", "MOZ_XPCOM_ABI"),
        ("FieldDeclarationRepeat1", "field_declaration_repeat1"),
        ("TILDE", "~"),
        (
            "MOZCANRUNSCRIPTFORDEFINITION",
            "MOZ_CAN_RUN_SCRIPT_FOR_DEFINITION",
        ),
        ("SizeofExpression", "sizeof_expression"),
        ("RBRACK", "]"),
        ("PLUS", "+"),
        ("FieldDeclarator", "_field_declarator"),
        ("U8SQUOTE", "u8'"),
        ("MOZNONPARAM", "MOZ_NON_PARAM"),
        ("MOZSTATICCLASS", "MOZ_STATIC_CLASS"),
        ("MacroAnnotation", "macro_annotation"),
        ("MOZINITOUTSIDECTOR", "MOZ_INIT_OUTSIDE_CTOR"),
        ("MOZHEAPALLOCATOR", "MOZ_HEAP_ALLOCATOR"),
        (
            "MOZPUSHDISABLENONTRIVIALUNIONWARNINGS",
            "MOZ_PUSH_DISABLE_NONTRIVIAL_UNION_WARNINGS",
        ),
        (
            "OptionalParameterDeclaration",
            "optional_parameter_declaration",
        ),
        ("SubscriptDesignator", "subscript_designator"),
        ("SLASH", "/"),
        ("If", "if"),
        ("Final", "final"),
        ("TryStatement", "try_statement"),
        ("PIPE", "|"),
        ("Null", "null"),
        ("Fastcall", "__fastcall"),
        ("MOZISREFPTR", "MOZ_IS_REFPTR"),
        ("TypeDefinitionRepeat1", "type_definition_repeat1"),
        ("DefaultMethodClause", "default_method_clause"),
        ("PreprocCall", "preproc_call"),
        ("NewDeclarator", "new_declarator"),
        ("BANGEQ", "!="),
        ("DeleteMethodClause", "delete_method_clause"),
        ("MOZNONNULLRETURN", "MOZ_NONNULL_RETURN"),
        ("QMARK", "?"),
        ("Switch", "switch"),
        (
            "MOZONLYUSEDTOAVOIDSTATICCONSTRUCTORS",
            "MOZ_ONLY_USED_TO_AVOID_STATIC_CONSTRUCTORS",
        ),
        ("UnaryExpression2", "unary_expression"),
        ("JSPUBLICAPI", "JS_PUBLIC_API"),
        ("Attribute2", "__attribute__"),
        ("LSQUOTE", "L'"),
        ("PreprocElse", "preproc_else"),
        ("UsingDeclaration", "using_declaration"),
        ("ConditionalExpression", "conditional_expression"),
        ("PreprocIf", "preproc_if"),
        ("SLASHEQ", "/="),
        ("ArrayDeclarator3", "array_declarator"),
        ("DOT", "."),
        ("DeclarationList", "declaration_list"),
        ("PERCENTEQ", "%="),
        ("CatchClause", "catch_clause"),
        ("BaseClassClauseRepeat1", "base_class_clause_repeat1"),
        ("DeleteExpression", "delete_expression"),
        ("QMTRYINSPECT", "QM_TRY_INSPECT"),
        ("LambdaDefaultCapture", "lambda_default_capture"),
    ]),
};

impl From<Cpp> for &str {
    #[inline(always)]
    fn from(grammar: Cpp) -> &'static str {
        KEYS.get(grammar.to_string().as_str()).unwrap()
    }
}

impl From<u16> for Cpp {
    #[inline(always)]
    fn from(x: u16) -> Self {
        num::FromPrimitive::from_u16(x).unwrap_or(Self::Error)
    }
}

// Cpp == u16
impl PartialEq<u16> for Cpp {
    #[inline(always)]
    fn eq(&self, x: &u16) -> bool {
        *self == Cpp::from(*x)
    }
}

// u16 == Cpp
impl PartialEq<Cpp> for u16 {
    #[inline(always)]
    fn eq(&self, x: &Cpp) -> bool {
        *x == *self
    }
}
