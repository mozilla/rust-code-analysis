// Code generated; DO NOT EDIT.

#[derive(Clone, Debug, PartialEq, FromPrimitive)]
pub enum Typescript {
    End = 0,
    Identifier = 1,
    HashBangLine = 2,
    Export = 3,
    STAR = 4,
    Default = 5,
    EQ = 6,
    As = 7,
    Namespace = 8,
    LBRACE = 9,
    COMMA = 10,
    RBRACE = 11,
    Type2 = 12,
    Typeof = 13,
    Import2 = 14,
    From = 15,
    Var = 16,
    Let = 17,
    Const = 18,
    BANG = 19,
    Else = 20,
    If = 21,
    Switch = 22,
    For = 23,
    LPAREN = 24,
    RPAREN = 25,
    Await = 26,
    In = 27,
    Of = 28,
    While = 29,
    Do = 30,
    Try = 31,
    With = 32,
    Break = 33,
    Continue = 34,
    Debugger = 35,
    Return = 36,
    Throw = 37,
    SEMI = 38,
    COLON = 39,
    Case = 40,
    Catch = 41,
    Finally = 42,
    Yield = 43,
    LBRACK = 44,
    RBRACK = 45,
    LT = 46,
    GT = 47,
    SLASH = 48,
    DOT = 49,
    Class2 = 50,
    Async = 51,
    Function2 = 52,
    EQGT = 53,
    QMARKDOT = 54,
    New = 55,
    PLUSEQ = 56,
    DASHEQ = 57,
    STAREQ = 58,
    SLASHEQ = 59,
    PERCENTEQ = 60,
    CARETEQ = 61,
    AMPEQ = 62,
    PIPEEQ = 63,
    GTGTEQ = 64,
    GTGTGTEQ = 65,
    LTLTEQ = 66,
    STARSTAREQ = 67,
    AMPAMPEQ = 68,
    PIPEPIPEEQ = 69,
    QMARKQMARKEQ = 70,
    DOTDOTDOT = 71,
    QMARK = 72,
    AMPAMP = 73,
    PIPEPIPE = 74,
    GTGT = 75,
    GTGTGT = 76,
    LTLT = 77,
    AMP = 78,
    CARET = 79,
    PIPE = 80,
    PLUS = 81,
    DASH = 82,
    PERCENT = 83,
    STARSTAR = 84,
    LTEQ = 85,
    EQEQ = 86,
    EQEQEQ = 87,
    BANGEQ = 88,
    BANGEQEQ = 89,
    GTEQ = 90,
    QMARKQMARK = 91,
    Instanceof = 92,
    TILDE = 93,
    Void = 94,
    Delete = 95,
    PLUSPLUS = 96,
    DASHDASH = 97,
    DQUOTE = 98,
    StringToken1 = 99,
    SQUOTE = 100,
    StringToken2 = 101,
    EscapeSequence = 102,
    Comment = 103,
    BQUOTE = 104,
    DOLLARLBRACE = 105,
    SLASH2 = 106,
    RegexPattern = 107,
    RegexFlags = 108,
    Number = 109,
    Target = 110,
    This = 111,
    Super = 112,
    True = 113,
    False = 114,
    Null = 115,
    Undefined = 116,
    AT = 117,
    Declare = 118,
    Static = 119,
    Readonly = 120,
    Abstract = 121,
    Get = 122,
    Set = 123,
    Public = 124,
    Private = 125,
    Protected = 126,
    Module3 = 127,
    Any = 128,
    Number2 = 129,
    Boolean = 130,
    String2 = 131,
    Symbol = 132,
    Require = 133,
    Implements = 134,
    Global = 135,
    Interface = 136,
    Extends = 137,
    Enum = 138,
    DASHQMARKCOLON = 139,
    QMARKCOLON = 140,
    Asserts2 = 141,
    Infer = 142,
    Is = 143,
    Keyof = 144,
    LBRACEPIPE = 145,
    PIPERBRACE = 146,
    AutomaticSemicolon = 147,
    TemplateChars = 148,
    FunctionSignatureAutomaticSemicolon = 149,
    Program = 150,
    ExportStatement = 151,
    ExportClause = 152,
    ExportSpecifier = 153,
    Declaration = 154,
    Import = 155,
    ImportStatement = 156,
    ImportClause = 157,
    FromClause = 158,
    NamespaceImport = 159,
    NamedImports = 160,
    ExpressionStatement = 161,
    VariableDeclaration = 162,
    LexicalDeclaration = 163,
    VariableDeclarator = 164,
    StatementBlock = 165,
    ElseClause = 166,
    IfStatement = 167,
    SwitchStatement = 168,
    ForStatement = 169,
    ForInStatement = 170,
    ForHeader = 171,
    WhileStatement = 172,
    DoStatement = 173,
    TryStatement = 174,
    WithStatement = 175,
    BreakStatement = 176,
    ContinueStatement = 177,
    DebuggerStatement = 178,
    ReturnStatement = 179,
    ThrowStatement = 180,
    EmptyStatement = 181,
    LabeledStatement = 182,
    SwitchBody = 183,
    SwitchCase = 184,
    SwitchDefault = 185,
    CatchClause = 186,
    FinallyClause = 187,
    ParenthesizedExpression = 188,
    Expression = 189,
    PrimaryExpression = 190,
    YieldExpression = 191,
    Object = 192,
    ObjectPattern = 193,
    AssignmentPattern = 194,
    ObjectAssignmentPattern = 195,
    Array = 196,
    ArrayPattern = 197,
    NestedIdentifier = 198,
    Class = 199,
    ClassDeclaration = 200,
    ClassHeritage = 201,
    Function = 202,
    FunctionDeclaration = 203,
    GeneratorFunction = 204,
    GeneratorFunctionDeclaration = 205,
    ArrowFunction = 206,
    CallSignature = 207,
    FormalParameter = 208,
    CallExpression = 209,
    NewExpression = 210,
    AwaitExpression = 211,
    MemberExpression = 212,
    SubscriptExpression = 213,
    AssignmentExpression = 214,
    AugmentedAssignmentLhs = 215,
    AugmentedAssignmentExpression = 216,
    Initializer = 217,
    DestructuringPattern = 218,
    SpreadElement = 219,
    TernaryExpression = 220,
    BinaryExpression = 221,
    UnaryExpression = 222,
    UpdateExpression = 223,
    SequenceExpression = 224,
    String = 225,
    TemplateString = 226,
    TemplateSubstitution = 227,
    Regex = 228,
    MetaProperty = 229,
    Arguments = 230,
    Decorator = 231,
    MemberExpression2 = 232,
    CallExpression2 = 233,
    ClassBody = 234,
    PublicFieldDefinition = 235,
    FormalParameters = 236,
    Pattern = 237,
    RestPattern = 238,
    MethodDefinition = 239,
    Pair = 240,
    PairPattern = 241,
    PropertyName = 242,
    ComputedPropertyName = 243,
    NonNullExpression = 244,
    MethodSignature = 245,
    AbstractMethodSignature = 246,
    FunctionSignature = 247,
    TypeAssertion = 248,
    AsExpression = 249,
    ImportRequireClause = 250,
    ImplementsClause = 251,
    AmbientDeclaration = 252,
    AbstractClassDeclaration = 253,
    Module = 254,
    InternalModule = 255,
    Module2 = 256,
    ImportAlias = 257,
    NestedTypeIdentifier = 258,
    InterfaceDeclaration = 259,
    ExtendsClause = 260,
    EnumDeclaration = 261,
    EnumBody = 262,
    EnumAssignment = 263,
    TypeAliasDeclaration = 264,
    AccessibilityModifier = 265,
    RequiredParameter = 266,
    OptionalParameter = 267,
    ParameterName = 268,
    OmittingTypeAnnotation = 269,
    OptingTypeAnnotation = 270,
    TypeAnnotation = 271,
    Asserts = 272,
    Type = 273,
    RequiredParameter2 = 274,
    OptionalParameter2 = 275,
    OptionalType = 276,
    RestType = 277,
    TupleTypeMember = 278,
    ConstructorType = 279,
    PrimaryType = 280,
    InferType = 281,
    ConditionalType = 282,
    GenericType = 283,
    TypePredicate = 284,
    TypePredicateAnnotation = 285,
    TypeQuery = 286,
    IndexTypeQuery = 287,
    LookupType = 288,
    MappedTypeClause = 289,
    LiteralType = 290,
    UnaryExpression2 = 291,
    ExistentialType = 292,
    FlowMaybeType = 293,
    ParenthesizedType = 294,
    PredefinedType = 295,
    TypeArguments = 296,
    ObjectType = 297,
    CallSignature2 = 298,
    PropertySignature = 299,
    TypeParameters = 300,
    TypeParameter = 301,
    DefaultType = 302,
    Constraint = 303,
    ConstructSignature = 304,
    IndexSignature = 305,
    ArrayType = 306,
    TupleType = 307,
    ReadonlyType = 308,
    UnionType = 309,
    IntersectionType = 310,
    FunctionType = 311,
    ProgramRepeat1 = 312,
    ExportStatementRepeat1 = 313,
    ExportClauseRepeat1 = 314,
    NamedImportsRepeat1 = 315,
    VariableDeclarationRepeat1 = 316,
    SwitchBodyRepeat1 = 317,
    ObjectRepeat1 = 318,
    ObjectPatternRepeat1 = 319,
    ArrayRepeat1 = 320,
    ArrayPatternRepeat1 = 321,
    StringRepeat1 = 322,
    StringRepeat2 = 323,
    TemplateStringRepeat1 = 324,
    ClassBodyRepeat1 = 325,
    FormalParametersRepeat1 = 326,
    ImplementsClauseRepeat1 = 327,
    ExtendsClauseRepeat1 = 328,
    EnumBodyRepeat1 = 329,
    ObjectTypeRepeat1 = 330,
    TypeParametersRepeat1 = 331,
    TupleTypeRepeat1 = 332,
    ImportSpecifier = 333,
    PropertyIdentifier = 334,
    ShorthandPropertyIdentifier = 335,
    ShorthandPropertyIdentifierPattern = 336,
    StatementIdentifier = 337,
    TypeIdentifier = 338,
    Error = 339,
}

#[allow(clippy::unreadable_literal)]
static KEYS: phf::Map<&'static str, Typescript> = ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
        (0, 1),
        (0, 20),
        (0, 1),
        (0, 41),
        (0, 19),
        (0, 0),
        (1, 289),
        (1, 207),
        (0, 9),
        (0, 14),
        (1, 114),
        (0, 51),
        (0, 15),
        (0, 0),
        (0, 21),
        (0, 1),
        (0, 5),
        (0, 165),
        (1, 30),
        (0, 0),
        (5, 168),
        (2, 63),
        (0, 22),
        (0, 26),
        (1, 2),
        (7, 193),
        (0, 22),
        (0, 0),
        (0, 242),
        (0, 65),
        (0, 80),
        (0, 119),
        (0, 239),
        (0, 3),
        (0, 187),
        (5, 9),
        (0, 48),
        (4, 97),
        (0, 21),
        (61, 287),
        (0, 1),
        (0, 275),
        (1, 27),
        (0, 268),
        (0, 296),
        (3, 277),
        (0, 13),
        (3, 19),
        (0, 49),
        (8, 75),
        (7, 278),
        (0, 0),
        (0, 35),
        (0, 211),
        (10, 194),
        (11, 96),
        (0, 24),
        (0, 105),
        (0, 21),
        (1, 67),
        (0, 2),
        (81, 272),
        (0, 205),
        (13, 129),
    ],
    entries: &[
        ("as_expression", Typescript::AsExpression),
        ("variable_declaration", Typescript::VariableDeclaration),
        ("generic_type", Typescript::GenericType),
        ("construct_signature", Typescript::ConstructSignature),
        (
            "implements_clause_repeat1",
            Typescript::ImplementsClauseRepeat1,
        ),
        ("!==", Typescript::BANGEQEQ),
        ("enum", Typescript::Enum),
        ("yield_expression", Typescript::YieldExpression),
        ("as", Typescript::As),
        ("extends", Typescript::Extends),
        ("let", Typescript::Let),
        ("return", Typescript::Return),
        ("%=", Typescript::PERCENTEQ),
        ("infer_type", Typescript::InferType),
        ("get", Typescript::Get),
        ("_formal_parameter", Typescript::FormalParameter),
        ("object_type", Typescript::ObjectType),
        ("property_identifier", Typescript::PropertyIdentifier),
        ("formal_parameters", Typescript::FormalParameters),
        ("template_string", Typescript::TemplateString),
        ("method_definition", Typescript::MethodDefinition),
        ("enum_declaration", Typescript::EnumDeclaration),
        ("export_clause_repeat1", Typescript::ExportClauseRepeat1),
        ("|", Typescript::PIPE),
        (
            "abstract_class_declaration",
            Typescript::AbstractClassDeclaration,
        ),
        ("import_specifier", Typescript::ImportSpecifier),
        ("for", Typescript::For),
        ("for_statement", Typescript::ForStatement),
        ("meta_property", Typescript::MetaProperty),
        ("debugger", Typescript::Debugger),
        (
            "omitting_type_annotation",
            Typescript::OmittingTypeAnnotation,
        ),
        ("if_statement", Typescript::IfStatement),
        ("<=", Typescript::LTEQ),
        ("tuple_type_repeat1", Typescript::TupleTypeRepeat1),
        ("generator_function", Typescript::GeneratorFunction),
        (
            "variable_declaration_repeat1",
            Typescript::VariableDeclarationRepeat1,
        ),
        ("**", Typescript::STARSTAR),
        ("object_pattern", Typescript::ObjectPattern),
        ("number", Typescript::Number),
        ("do", Typescript::Do),
        ("identifier", Typescript::Identifier),
        ("ternary_expression", Typescript::TernaryExpression),
        ("binary_expression", Typescript::BinaryExpression),
        ("arguments", Typescript::Arguments),
        ("<", Typescript::LT),
        ("rest_type", Typescript::RestType),
        ("if", Typescript::If),
        ("mapped_type_clause", Typescript::MappedTypeClause),
        ("private", Typescript::Private),
        (
            "abstract_method_signature",
            Typescript::AbstractMethodSignature,
        ),
        ("'", Typescript::SQUOTE),
        ("array_repeat1", Typescript::ArrayRepeat1),
        ("_destructuring_pattern", Typescript::DestructuringPattern),
        (
            "type_predicate_annotation",
            Typescript::TypePredicateAnnotation,
        ),
        ("existential_type", Typescript::ExistentialType),
        ("default_type", Typescript::DefaultType),
        ("union_type", Typescript::UnionType),
        (">>>", Typescript::GTGTGT),
        ("extends_clause_repeat1", Typescript::ExtendsClauseRepeat1),
        ("=", Typescript::EQ),
        ("namespace", Typescript::Namespace),
        ("import_statement", Typescript::ImportStatement),
        ("lexical_declaration", Typescript::LexicalDeclaration),
        (">>=", Typescript::GTGTEQ),
        ("undefined", Typescript::Undefined),
        ("abstract", Typescript::Abstract),
        ("with", Typescript::With),
        ("{|", Typescript::LBRACEPIPE),
        ("throw_statement", Typescript::ThrowStatement),
        ("++", Typescript::PLUSPLUS),
        ("type_parameters", Typescript::TypeParameters),
        ("regex_flags", Typescript::RegexFlags),
        ("~", Typescript::TILDE),
        ("statement_identifier", Typescript::StatementIdentifier),
        ("required_parameter", Typescript::RequiredParameter),
        ("string_repeat2", Typescript::StringRepeat2),
        ("class_declaration", Typescript::ClassDeclaration),
        ("string", Typescript::String),
        ("-=", Typescript::DASHEQ),
        ("?", Typescript::QMARK),
        ("ambient_declaration", Typescript::AmbientDeclaration),
        ("regex", Typescript::Regex),
        ("accessibility_modifier", Typescript::AccessibilityModifier),
        ("arrow_function", Typescript::ArrowFunction),
        ("+=", Typescript::PLUSEQ),
        ("switch_body_repeat1", Typescript::SwitchBodyRepeat1),
        ("||=", Typescript::PIPEPIPEEQ),
        ("type_identifier", Typescript::TypeIdentifier),
        ("_for_header", Typescript::ForHeader),
        ("(", Typescript::LPAREN),
        ("|}", Typescript::PIPERBRACE),
        ("of", Typescript::Of),
        ("named_imports", Typescript::NamedImports),
        (
            "export_statement_repeat1",
            Typescript::ExportStatementRepeat1,
        ),
        ("namespace_import", Typescript::NamespaceImport),
        ("program", Typescript::Program),
        ("internal_module", Typescript::InternalModule),
        ("continue_statement", Typescript::ContinueStatement),
        ("conditional_type", Typescript::ConditionalType),
        ("?.", Typescript::QMARKDOT),
        ("readonly", Typescript::Readonly),
        (":", Typescript::COLON),
        ("opting_type_annotation", Typescript::OptingTypeAnnotation),
        ("else", Typescript::Else),
        ("false", Typescript::False),
        ("global", Typescript::Global),
        (
            "augmented_assignment_expression",
            Typescript::AugmentedAssignmentExpression,
        ),
        ("escape_sequence", Typescript::EscapeSequence),
        ("void", Typescript::Void),
        ("export_clause", Typescript::ExportClause),
        ("type_parameter", Typescript::TypeParameter),
        ("_call_signature", Typescript::CallSignature),
        (",", Typescript::COMMA),
        ("export_specifier", Typescript::ExportSpecifier),
        ("named_imports_repeat1", Typescript::NamedImportsRepeat1),
        ("<<", Typescript::LTLT),
        ("predefined_type", Typescript::PredefinedType),
        ("infer", Typescript::Infer),
        ("break", Typescript::Break),
        ("set", Typescript::Set),
        ("computed_property_name", Typescript::ComputedPropertyName),
        (";", Typescript::SEMI),
        ("update_expression", Typescript::UpdateExpression),
        ("pair_pattern", Typescript::PairPattern),
        ("interface", Typescript::Interface),
        ("for_in_statement", Typescript::ForInStatement),
        ("keyof", Typescript::Keyof),
        ("??", Typescript::QMARKQMARK),
        ("optional_type", Typescript::OptionalType),
        ("type_arguments", Typescript::TypeArguments),
        ("constraint", Typescript::Constraint),
        ("pair", Typescript::Pair),
        ("string_token2", Typescript::StringToken2),
        ("**=", Typescript::STARSTAREQ),
        ("intersection_type", Typescript::IntersectionType),
        ("||", Typescript::PIPEPIPE),
        ("statement_block", Typescript::StatementBlock),
        (
            "shorthand_property_identifier",
            Typescript::ShorthandPropertyIdentifier,
        ),
        ("\\\"", Typescript::DQUOTE),
        ("function_type", Typescript::FunctionType),
        ("target", Typescript::Target),
        (
            "object_assignment_pattern",
            Typescript::ObjectAssignmentPattern,
        ),
        ("else_clause", Typescript::ElseClause),
        ("class_body", Typescript::ClassBody),
        ("index_type_query", Typescript::IndexTypeQuery),
        ("string_token1", Typescript::StringToken1),
        ("import_clause", Typescript::ImportClause),
        ("labeled_statement", Typescript::LabeledStatement),
        ("null", Typescript::Null),
        ("class_body_repeat1", Typescript::ClassBodyRepeat1),
        ("declare", Typescript::Declare),
        ("*", Typescript::STAR),
        ("_type", Typescript::Type),
        ("module", Typescript::Module),
        ("function", Typescript::Function),
        ("class_heritage", Typescript::ClassHeritage),
        ("readonly_type", Typescript::ReadonlyType),
        ("method_signature", Typescript::MethodSignature),
        ("function_signature", Typescript::FunctionSignature),
        ("implements_clause", Typescript::ImplementsClause),
        ("variable_declarator", Typescript::VariableDeclarator),
        ("empty_statement", Typescript::EmptyStatement),
        ("?:", Typescript::QMARKCOLON),
        ("symbol", Typescript::Symbol),
        ("template_string_repeat1", Typescript::TemplateStringRepeat1),
        (
            "formal_parameters_repeat1",
            Typescript::FormalParametersRepeat1,
        ),
        ("optional_parameter", Typescript::OptionalParameter),
        ("function_declaration", Typescript::FunctionDeclaration),
        ("%", Typescript::PERCENT),
        ("interface_declaration", Typescript::InterfaceDeclaration),
        ("boolean", Typescript::Boolean),
        ("await_expression", Typescript::AwaitExpression),
        (".", Typescript::DOT),
        ("array", Typescript::Array),
        ("^", Typescript::CARET),
        ("string_repeat1", Typescript::StringRepeat1),
        ("===", Typescript::EQEQEQ),
        ("while", Typescript::While),
        ("object_repeat1", Typescript::ObjectRepeat1),
        ("class", Typescript::Class),
        ("&&=", Typescript::AMPAMPEQ),
        ("flow_maybe_type", Typescript::FlowMaybeType),
        ("object", Typescript::Object),
        (
            "_function_signature_automatic_semicolon",
            Typescript::FunctionSignatureAutomaticSemicolon,
        ),
        ("spread_element", Typescript::SpreadElement),
        ("const", Typescript::Const),
        ("assignment_expression", Typescript::AssignmentExpression),
        ("member_expression", Typescript::MemberExpression),
        ("switch_statement", Typescript::SwitchStatement),
        ("type_assertion", Typescript::TypeAssertion),
        ("end", Typescript::End),
        ("debugger_statement", Typescript::DebuggerStatement),
        ("nested_type_identifier", Typescript::NestedTypeIdentifier),
        ("lookup_type", Typescript::LookupType),
        ("==", Typescript::EQEQ),
        ("/", Typescript::SLASH),
        (">", Typescript::GT),
        ("try_statement", Typescript::TryStatement),
        ("literal_type", Typescript::LiteralType),
        ("public_field_definition", Typescript::PublicFieldDefinition),
        ("object_pattern_repeat1", Typescript::ObjectPatternRepeat1),
        ("ERROR", Typescript::Error),
        (
            "shorthand_property_identifier_pattern",
            Typescript::ShorthandPropertyIdentifierPattern,
        ),
        ("switch_body", Typescript::SwitchBody),
        ("object_type_repeat1", Typescript::ObjectTypeRepeat1),
        ("decorator", Typescript::Decorator),
        ("async", Typescript::Async),
        ("this", Typescript::This),
        ("--", Typescript::DASHDASH),
        ("non_null_expression", Typescript::NonNullExpression),
        ("default", Typescript::Default),
        (
            "parenthesized_expression",
            Typescript::ParenthesizedExpression,
        ),
        ("enum_body_repeat1", Typescript::EnumBodyRepeat1),
        ("throw", Typescript::Throw),
        ("is", Typescript::Is),
        ("_from_clause", Typescript::FromClause),
        ("!", Typescript::BANG),
        ("implements", Typescript::Implements),
        ("tuple_type", Typescript::TupleType),
        ("require", Typescript::Require),
        ("_automatic_semicolon", Typescript::AutomaticSemicolon),
        ("&&", Typescript::AMPAMP),
        ("enum_assignment", Typescript::EnumAssignment),
        ("any", Typescript::Any),
        ("property_signature", Typescript::PropertySignature),
        ("]", Typescript::RBRACK),
        ("import", Typescript::Import),
        ("export", Typescript::Export),
        ("try", Typescript::Try),
        ("assignment_pattern", Typescript::AssignmentPattern),
        ("switch_case", Typescript::SwitchCase),
        (">=", Typescript::GTEQ),
        (">>", Typescript::GTGT),
        ("type_parameters_repeat1", Typescript::TypeParametersRepeat1),
        ("|=", Typescript::PIPEEQ),
        ("*=", Typescript::STAREQ),
        ("parenthesized_type", Typescript::ParenthesizedType),
        ("_template_chars", Typescript::TemplateChars),
        ("delete", Typescript::Delete),
        ("hash_bang_line", Typescript::HashBangLine),
        ("expression_statement", Typescript::ExpressionStatement),
        ("true", Typescript::True),
        ("static", Typescript::Static),
        ("array_type", Typescript::ArrayType),
        ("comment", Typescript::Comment),
        ("import_alias", Typescript::ImportAlias),
        ("finally_clause", Typescript::FinallyClause),
        ("return_statement", Typescript::ReturnStatement),
        ("catch_clause", Typescript::CatchClause),
        ("template_substitution", Typescript::TemplateSubstitution),
        ("case", Typescript::Case),
        ("asserts", Typescript::Asserts),
        ("_initializer", Typescript::Initializer),
        ("from", Typescript::From),
        ("protected", Typescript::Protected),
        ("public", Typescript::Public),
        ("call_expression", Typescript::CallExpression),
        ("yield", Typescript::Yield),
        ("&", Typescript::AMP),
        ("=>", Typescript::EQGT),
        ("&=", Typescript::AMPEQ),
        ("await", Typescript::Await),
        ("regex_pattern", Typescript::RegexPattern),
        ("_tuple_type_member", Typescript::TupleTypeMember),
        ("declaration", Typescript::Declaration),
        ("array_pattern", Typescript::ArrayPattern),
        ("primary_expression", Typescript::PrimaryExpression),
        ("^=", Typescript::CARETEQ),
        ("break_statement", Typescript::BreakStatement),
        ("export_statement", Typescript::ExportStatement),
        ("<<=", Typescript::LTLTEQ),
        ("+", Typescript::PLUS),
        ("constructor_type", Typescript::ConstructorType),
        ("import_require_clause", Typescript::ImportRequireClause),
        ("[", Typescript::LBRACK),
        ("typeof", Typescript::Typeof),
        ("${", Typescript::DOLLARLBRACE),
        (
            "generator_function_declaration",
            Typescript::GeneratorFunctionDeclaration,
        ),
        ("expression", Typescript::Expression),
        ("}", Typescript::RBRACE),
        ("array_pattern_repeat1", Typescript::ArrayPatternRepeat1),
        ("enum_body", Typescript::EnumBody),
        ("while_statement", Typescript::WhileStatement),
        ("_primary_type", Typescript::PrimaryType),
        ("var", Typescript::Var),
        ("subscript_expression", Typescript::SubscriptExpression),
        ("type_alias_declaration", Typescript::TypeAliasDeclaration),
        ("in", Typescript::In),
        ("type_query", Typescript::TypeQuery),
        ("{", Typescript::LBRACE),
        ("`", Typescript::BQUOTE),
        ("super", Typescript::Super),
        ("_parameter_name", Typescript::ParameterName),
        ("sequence_expression", Typescript::SequenceExpression),
        ("switch", Typescript::Switch),
        ("pattern", Typescript::Pattern),
        ("with_statement", Typescript::WithStatement),
        ("catch", Typescript::Catch),
        ("instanceof", Typescript::Instanceof),
        ("-", Typescript::DASH),
        ("extends_clause", Typescript::ExtendsClause),
        ("type_annotation", Typescript::TypeAnnotation),
        (">>>=", Typescript::GTGTGTEQ),
        ("switch_default", Typescript::SwitchDefault),
        ("nested_identifier", Typescript::NestedIdentifier),
        ("index_signature", Typescript::IndexSignature),
        ("/=", Typescript::SLASHEQ),
        ("new", Typescript::New),
        ("??=", Typescript::QMARKQMARKEQ),
        (
            "_augmented_assignment_lhs",
            Typescript::AugmentedAssignmentLhs,
        ),
        ("_property_name", Typescript::PropertyName),
        (")", Typescript::RPAREN),
        ("-?:", Typescript::DASHQMARKCOLON),
        ("continue", Typescript::Continue),
        ("rest_pattern", Typescript::RestPattern),
        ("type_predicate", Typescript::TypePredicate),
        ("program_repeat1", Typescript::ProgramRepeat1),
        ("!=", Typescript::BANGEQ),
        ("...", Typescript::DOTDOTDOT),
        ("finally", Typescript::Finally),
        ("new_expression", Typescript::NewExpression),
        ("do_statement", Typescript::DoStatement),
        ("unary_expression", Typescript::UnaryExpression),
        ("@", Typescript::AT),
    ],
};

impl From<&str> for Typescript {
    #[inline(always)]
    fn from(key: &str) -> Self {
        KEYS.get(key).unwrap().clone()
    }
}

impl From<u16> for Typescript {
    #[inline(always)]
    fn from(x: u16) -> Self {
        num::FromPrimitive::from_u16(x).unwrap_or(Self::Error)
    }
}

// Typescript == u16
impl PartialEq<u16> for Typescript {
    #[inline(always)]
    fn eq(&self, x: &u16) -> bool {
        *self == Typescript::from(*x)
    }
}

// u16 == Typescript
impl PartialEq<Typescript> for u16 {
    #[inline(always)]
    fn eq(&self, x: &Typescript) -> bool {
        *x == *self
    }
}
